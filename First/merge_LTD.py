from mpi4py import MPI

comm = MPI.COMM_WORLD
rank = comm.Get_rank()
idx = rank

import sys
import os

# Ca pulse peak (uM)
ca_peak = sys.argv[4]
pp2a_input = sys.argv[5] 
no_input = sys.argv[6]
#time = sys.argv[7]
# Ca pulse width (s)
ca_width = 10

# Raf number
raf_number = 10

# PLA2 concentration (uM)
pla2_conc = 0.4

# PKC number
pkc_number = 72
raf_change = 0




import datetime
import steps.model as smodel
import math
import sys
import numpy 
import numpy as np
from numpy import mean
import steps.solver as swmdirect
import steps.geom as swm
import steps.rng as srng
from pylab import *
import pickle

a = 0
#calc_3_3 = 0
#calc_3_1 = 0
calc_3_4 = 0
DT = 1 
path=sys.argv[1]
dataid=sys.argv[2]


# final time (s) simulated
INT = 10000

# Number of runs used to calculate the mean
NITER = 1 

# Initial time that will be discharged (s). 
# The initial 10 minutes of all simulations should be discharged to allow the model to reach equilibrium.
tinit = 600 

# Avogadro constant
Na = 6.02214129e23
Kin = sys.argv[3]
type (Kin)
########################################################################

# Create storage locations. This will fail if the index is already in use
try: os.mkdir(path+'/'+dataid+'_'+Kin+'_'+ca_peak+'_'+pp2a_input+'_'+no_input)
except: pass
os.mkdir(path+'/'+dataid+'_'+Kin+'_'+ca_peak+'_'+pp2a_input+'_'+no_input+'/'+ str(idx))


# Ca2+ pulse. 
# The duration and amplitude of the pulse should be checked directly in the Ca2+ concentration
# The changes in [Ca2+] generated by the pulses are sensitive to stochasticity
# altering max_molar alters the maximum molar concentration per second injection (M/s) 
# cntr defines the time the pulse is at maximum (s)
# FW100M defines the full-width 100th maximum of the Gaussian (s)


def gaussian_ica(t,max_molar=(float(ca_peak)*1e-6)/0.05,cntr=500.0,FW100M=float(ca_width)):
    c = FW100M/(2*math.sqrt(2*math.log(100)))
    return max_molar*np.exp(-(((t-cntr)**2)/(2*c**2)))

######################################################################## 

def gen_model(): 
    mdl=smodel.Model() 
    
    Ca = smodel.Spec('Ca', mdl)
    PMCA = smodel.Spec('PMCA', mdl)
    Ca1PMCA = smodel.Spec('Ca1PMCA', mdl) 
    NCX = smodel.Spec('NCX', mdl) 
    Ca1NCX = smodel.Spec('Ca1NCX', mdl)  
    Ca2NCX = smodel.Spec('Ca2NCX', mdl)
    SERCA = smodel.Spec('SERCA', mdl) 
    Ca1SERCA = smodel.Spec('Ca1SERCA', mdl)  
    Ca2SERCA = smodel.Spec('Ca2SERCA', mdl)            
    PV = smodel.Spec('PV', mdl)
    MgPV = smodel.Spec('MgPV', mdl)  
    CaPV = smodel.Spec('CaPV', mdl)
    Mg2PV = smodel.Spec('Mg2PV', mdl)  
    Ca2PV = smodel.Spec('Ca2PV', mdl)
    CBf = smodel.Spec('CBf', mdl)              
    CaCBf = smodel.Spec('CaCBf', mdl) 
    Ca2CBf = smodel.Spec('Ca2CBf', mdl) 
    CBs = smodel.Spec('CBs', mdl)              
    CaCBs = smodel.Spec('CaCBs', mdl)  
    Ca2CBs = smodel.Spec('Ca2CBs', mdl) 
    PKC = smodel.Spec('PKC', mdl)
    Ca1PKC = smodel.Spec('Ca1PKC', mdl)
    Ca3PKC = smodel.Spec('Ca3PKC', mdl)
    AAPKC = smodel.Spec('AAPKC', mdl)    
    AACa1PKC = smodel.Spec('AACa1PKC', mdl)  
    AACa3PKC = smodel.Spec('AACa3PKC', mdl)                      
    PKCstar = smodel.Spec('PKCstar', mdl) 
    PKCstar2 = smodel.Spec('PKCstar2', mdl)       
    PKCstar4 = smodel.Spec('PKCstar4', mdl)
    PKCstar3 = smodel.Spec('PKCstar3', mdl) 
    Raf = smodel.Spec('Raf', mdl)  
    Rafstar = smodel.Spec('Rafstar', mdl)           
    PP5 = smodel.Spec('PP5', mdl)       
    PP5Rafstar = smodel.Spec('PP5Rafstar', mdl)        
    MEK = smodel.Spec('MEK', mdl)                    
    RafstarMEK = smodel.Spec('RafstarMEK', mdl)        
    MEKp = smodel.Spec('MEKp', mdl)
    PP2A = smodel.Spec('PP2A', mdl) 
    PP2AMEKp = smodel.Spec('PP2AMEKp', mdl)             
    RafstarMEKp = smodel.Spec('RafstarMEKp', mdl)        
    MEKstar = smodel.Spec('MEKstar', mdl)                
    PP2AMEKstar = smodel.Spec('PP2AMEKstar', mdl)        
    ERK = smodel.Spec('ERK', mdl)                         
    MEKstarERK = smodel.Spec('MEKstarERK', mdl)           
    ERKp = smodel.Spec('ERKp', mdl)                       
    MKP = smodel.Spec('MKP', mdl)                       
    MKPERKp = smodel.Spec('MKPERKp', mdl)             
    MEKstarERKp = smodel.Spec('MEKstarERKp', mdl)        
    ERKstar = smodel.Spec('ERKstar', mdl)             
    MKPERKstar = smodel.Spec('MKPERKstar', mdl) 
    PLA2 = smodel.Spec('PLA2', mdl)            
    Ca1PLA2 = smodel.Spec('Ca1PLA2', mdl)
    Ca2PLA2 = smodel.Spec('Ca2PLA2', mdl)
    PLA2memb = smodel.Spec('PLA2memb', mdl)
    Ca1PLA2memb = smodel.Spec('Ca1PLA2memb', mdl) 
    PLA2star1 = smodel.Spec('PLA2star1', mdl)                     
    ERKstarPLA2 = smodel.Spec('ERKstarPLA2', mdl)         
    PLA2star2 = smodel.Spec('PLA2star2', mdl)                              
    Ca1PLA2star2 = smodel.Spec('Ca1PLA2star2', mdl)
    Ca2PLA2star2 = smodel.Spec('Ca2PLA2star2', mdl)
    PLA2star2memb = smodel.Spec('PLA2star2memb', mdl)
    Ca1PLA2star2memb = smodel.Spec('Ca1PLA2star2memb', mdl)
    Ca2PLA2star2memb = smodel.Spec('Ca2PLA2star2memb', mdl)
    PLA2star1APC = smodel.Spec('PLA2star1APC', mdl)
    ERKstarCa1PLA2 = smodel.Spec('ERKstarCa1PLA2', mdl)
    ERKstarCa2PLA2 = smodel.Spec('ERKstarCa2PLA2', mdl)
    PP2ACa1PLA2star2 = smodel.Spec('PP2ACa1PLA2star2', mdl)
    PP2ACa2PLA2star2 = smodel.Spec('PP2ACa2PLA2star2', mdl)
    PP1Ca1PLA2star2 = smodel.Spec('PP1Ca1PLA2star2', mdl)
    PP1Ca2PLA2star2 = smodel.Spec('PP1Ca2PLA2star2', mdl)
    PLA2star2membAPC = smodel.Spec('PLA2star2membAPC', mdl)
    Ca1PLA2star2membAPC = smodel.Spec('Ca1PLA2star2membAPC', mdl)
    Ca2PLA2star2membAPC = smodel.Spec('Ca2PLA2star2membAPC', mdl)
    PP1 = smodel.Spec('PP1', mdl)
    PP1PLA2star2 = smodel.Spec('PP1PLA2star2', mdl) 
    PP2APLA2star2 = smodel.Spec('PP2APLA2star2', mdl)           
    AA = smodel.Spec('AA', mdl)              
    AMPAR = smodel.Spec('AMPAR', mdl)    
    PKCstarAMPAR = smodel.Spec('PKCstarAMPAR', mdl) 
    PKCstar2AMPAR = smodel.Spec('PKCstar2AMPAR', mdl)       
    PKCstar4AMPAR = smodel.Spec('PKCstar4AMPAR', mdl)
    PKCstar3AMPAR = smodel.Spec('PKCstar3AMPAR', mdl)         
    AMPAR_P = smodel.Spec('AMPAR_P', mdl)                  
    PP2AAMPAR_P = smodel.Spec('PP2AAMPAR_P', mdl)                  
    AMPARextra = smodel.Spec('AMPARextra', mdl)  
    AMPARextra_P = smodel.Spec('AMPARextra_P', mdl)
    PP2AAMPARextra_P = smodel.Spec('PP2AAMPARextra_P', mdl)
    GRIP = smodel.Spec('GRIP', mdl)
    GRIPAMPAR = smodel.Spec('GRIPAMPAR', mdl)
    GRIPAMPAR_P = smodel.Spec('GRIPAMPAR_P', mdl)   
    AMPARdend = smodel.Spec('AMPARdend', mdl)  
    AMPARdend_P = smodel.Spec('AMPARdend_P', mdl)  
    PP2AAMPARdend_P = smodel.Spec('PP2AAMPARdend_P', mdl)  
    AMPARcyt = smodel.Spec('AMPARcyt', mdl)  
    AMPARcyt_P = smodel.Spec('AMPARcyt_P', mdl)  
    PP2AAMPARcyt_P = smodel.Spec('PP2AAMPARcyt_P', mdl)
    RKIP = smodel.Spec('RKIP', mdl)
    RafRKIP = smodel.Spec('RafRKIP', mdl)
    RafRKIPPKCstar = smodel.Spec('RafRKIPPKCstar', mdl)
    RKIPstar = smodel.Spec('RKIPstar', mdl)
    RP = smodel.Spec('RP', mdl)
    RKIPstarRP = smodel.Spec ('RKIPstarRP', mdl)
    RafRKIPPKCstar2= smodel.Spec ('RafRKIPPKCstar2', mdl)
    RafRKIPPKCstar3= smodel.Spec ('RafRKIPPKCstar3', mdl)
    RafRKIPPKCstar4= smodel.Spec ('RafRKIPPKCstar4', mdl)
    MEKRKIP= smodel.Spec('MEKRKIP', mdl)
    MEKRKIPPKCstar = smodel.Spec('MEKRKIPPKCstar', mdl)
    MEKRKIPPKCstar2= smodel.Spec ('MEKRKIPPKCstar2', mdl)
    MEKRKIPPKCstar3= smodel.Spec ('MEKRKIPPKCstar3', mdl)
    MEKRKIPPKCstar4= smodel.Spec ('MEKRKIPPKCstar4', mdl)
    
    CaM = smodel.Spec('CaM',mdl)
    CaM1Ca = smodel.Spec('CaM1Ca',mdl)
    CaM2Ca = smodel.Spec('CaM2Ca',mdl)
    CaM3Ca = smodel.Spec('CaM3Ca',mdl)
    CaN = smodel.Spec('CaN',mdl)
    CaM3CaCaN = smodel.Spec('CaM3CaCaN',mdl)
    CaMKII = smodel.Spec('CaMKII',mdl)
    CaM3Ca_CaMKII = smodel.Spec('CaM3Ca_CaMKII',mdl)
    CaM3Ca_pT286287 = smodel.Spec('CaM3Ca_pT286287',mdl)
    pT286287 = smodel.Spec('pT286287',mdl)
    pT286287_pT308306 = smodel.Spec('pT286287_pT308306',mdl)
    pT308306 = smodel.Spec('pT308306',mdl)

    GC = smodel.Spec('GC',mdl)
    NO = smodel.Spec('NO',mdl)
    GC_NO = smodel.Spec('GC_NO',mdl)
    GTP = smodel.Spec('GTP',mdl)
    GTP_GC_NO = smodel.Spec('GTP_GC_NO',mdl)
    cGMP = smodel.Spec('cGMP',mdl)
    GMP = smodel.Spec('GMP',mdl)
    PDE1 = smodel.Spec('PDE1',mdl)
    pPDE1 = smodel.Spec('pPDE1',mdl)
    PDE5 = smodel.Spec('PDE5',mdl)
    PDE5_cGMP = smodel.Spec('PDE5_cGMP',mdl)
    PKG = smodel.Spec('PKG',mdl)
    PKG_cGMP = smodel.Spec('PKG_cGMP',mdl)
    PP2A_pGsub = smodel.Spec('PP2A_pGsub',mdl)
    pG = smodel.Spec('pG',mdl)
    G_sub = smodel.Spec('G_sub',mdl)

    CaM3Ca_pT286287_PP1 = smodel.Spec('CaM3Ca_pT286287_PP1',mdl)
    CaM3Ca_pT286287_PP2A = smodel.Spec('CaM3Ca_pT286287_PP2A',mdl)
    pT286287_pT308306_PP1 = smodel.Spec('pT286287_pT308306_PP1',mdl)
    pT286287_pT308306_PP2A = smodel.Spec('pT286287_pT308306_PP2A',mdl)
    pT286287_PP1 = smodel.Spec('pT286287_PP1',mdl)
    pT286287_PP2A = smodel.Spec('pT286287_PP2A',mdl)
    pT286287_pT308306_PP1_2 = smodel.Spec('pT286287_pT308306_PP1_2',mdl)
    pT286287_pT308306_PP2A_2 = smodel.Spec('pT286287_pT308306_PP2A_2',mdl)
    pT308306_PP1 = smodel.Spec('pT308306_PP1',mdl)
    pT308306_PP2A = smodel.Spec('pT308306_PP2A',mdl)
    cGMP_CaM3Ca_pPDE1 = smodel.Spec('cGMP_CaM3Ca_pPDE1',mdl)
    cGMP_CaM3Ca_PDE1 = smodel.Spec('cGMP_CaM3Ca_PDE1',mdl)
    cGMP_PDE1 = smodel.Spec('cGMP_PDE1',mdl)
    cGMP_PDE5 = smodel.Spec('cGMP_PDE5',mdl)
    cGMP_pPDE1 = smodel.Spec('cGMP_pPDE1',mdl)
    PDE1_CaMKII = smodel.Spec('PDE1_CaMKII',mdl)
    pPDE1_CaN = smodel.Spec('pPDE1_CaN',mdl)
    CaM3Ca_PDE1_CaMKII = smodel.Spec('CaM3Ca_PDE1_CaMKII',mdl)
    CaM3Ca_pPDE1_CaN = smodel.Spec('CaM3Ca_pPDE1_CaN',mdl)
    pG_PP2A = smodel.Spec('pG_PP2A',mdl)
    pG_CaN = smodel.Spec('pG_CaN',mdl)
    G_sub_PKG = smodel.Spec('G_sub_PKG',mdl)
    CaM3Ca_PDE1 = smodel.Spec('CaM3Ca_PDE1',mdl)
    CaM3Ca_pPDE1 = smodel.Spec('CaM3Ca_pPDE1',mdl)

    PP1_pDARPP32 = smodel.Spec('PP1_pDARPP32',mdl)
    PP1_DARPP32 = smodel.Spec('PP1_DARPP32',mdl)
    DARPP32 = smodel.Spec('DARPP32',mdl)
    pDARPP32 = smodel.Spec('pDARPP32',mdl)
    R2C2_PKA = smodel.Spec('R2C2_PKA',mdl)
    cAMP_R2C2 = smodel.Spec('cAMP_R2C2',mdl)
    cAMP2_bb_R2C2 = smodel.Spec('cAMP2_bb_R2C2',mdl)
    cAMP2_ab_R2C2 = smodel.Spec('cAMP2_ab_R2C2',mdl)
    cAMP2_ab_R2C = smodel.Spec('cAMP2_ab_R2C',mdl)
    cAMP3_R2C2 = smodel.Spec('cAMP3_R2C2',mdl)
    cAMP3_R2C = smodel.Spec('cAMP3_R2C',mdl)
    cAMP4_R2C2 = smodel.Spec('cAMP4_R2C2',mdl)
    cAMP4_R2C = smodel.Spec('cAMP4_R2C',mdl)
    cAMP4_R2 = smodel.Spec('cAMP4_R2',mdl)
    C_actPKA = smodel.Spec('C_actPKA',mdl)
    cAMP = smodel.Spec('cAMP',mdl)
    AMP = smodel.Spec('AMP',mdl)
    PDE4 = smodel.Spec('PDE4',mdl)
    cAMP_pPDE1 = smodel.Spec('cAMP_pPDE1',mdl)
    cAMP_PDE1 = smodel.Spec('cAMP_PDE1',mdl)
    cAMP_CaM3Ca_PDE1 = smodel.Spec('cAMP_CaM3Ca_PDE1',mdl)
    cAMP_CaM3Ca_pPDE1 = smodel.Spec('cAMP_CaM3Ca_pPDE1',mdl)
    cAMP_PDE4 = smodel.Spec('cAMP_PDE4',mdl)

    PP1_pDARPP32_PP2A = smodel.Spec('PP1_pDARPP32_PP2A',mdl)
    PP1_pDARPP32_CaN = smodel.Spec('PP1_pDARPP32_CaN',mdl)
    PP1_DARPP32_C_actPKA = smodel.Spec('PP1_DARPP32_C_actPKA',mdl)
    pDARPP32_PP2A = smodel.Spec('pDARPP32_PP2A',mdl)
    pDARPP32_CaN = smodel.Spec('pDARPP32_CaN',mdl)
    DARPP32_C_actPKA = smodel.Spec('DARPP32_C_actPKA',mdl)
    
    
    
    pG_CaM3CaCaN = smodel.Spec('pG_CaM3CaCaN',mdl)
    act_PDE5 = smodel.Spec('act_PDE5',mdl)
    calc_3_1 = smodel.Spec('calc_3_1',mdl)
    calc_3_3 = smodel.Spec('calc_3_3',mdl)
    #calc_3_4 = smodel.Spec('calc_3_4',mdl)
    

    totbasGTP = smodel.Spec('totbasGTP',mdl)


    extra = smodel.Volsys('extra', mdl)
    vsys = smodel.Volsys('vsys', mdl)
    s = smodel.Surfsys('memb', mdl)
    ERs = smodel.Surfsys('ERmemb', mdl)
    cytER = smodel.Volsys('cytER', mdl)

    ########################################################################
    ########################################################################

    # Reactions
    
    # Ca influx (Ca = calcium)
    CainfluxR = smodel.Reac('Cainflux', vsys, rhs=[Ca])
    # reaction constant for zero-order reaction units M/s in STEPS 1.2 and above
    CainfluxR.kcst = 0.0 
    
    # Ca + PMCA <->  Ca1PMCA -> PMCA
    Reac1 = smodel.SReac('pump2_f', s, ilhs = [Ca], slhs =  [PMCA], srhs = [Ca1PMCA])
    Reac1.kcst = 25000e6
    Reac2 = smodel.SReac('Reac2', s, slhs = [Ca1PMCA], irhs = [Ca], srhs = [PMCA])
    Reac2.kcst = 2000 
    Reac3 = smodel.SReac('Reac3', s, slhs = [Ca1PMCA], srhs = [PMCA])   
    Reac3.kcst = 500
    
    # Ca + NCX <->  Ca1NCX + Ca <->  Ca2NCX -> NCX 
    Reac4 = smodel.SReac('Reac4', s, ilhs = [Ca], slhs = [NCX], srhs = [Ca1NCX])
    Reac4.kcst = 93.827e6  
    Reac5 = smodel.SReac('Reac5', s, slhs = [Ca1NCX], irhs = [Ca], srhs = [NCX])
    Reac5.kcst = 612.6
    Reac6 = smodel.SReac('Reac6', s, ilhs = [Ca], slhs = [Ca1NCX], srhs = [Ca2NCX])
    Reac6.kcst = 93.827e6 
    Reac7 = smodel.SReac('Reac7', s, slhs = [Ca2NCX], irhs = [Ca], srhs = [Ca1NCX])
    Reac7.kcst = 612.6
    Reac8 = smodel.SReac('Reac8', s, slhs = [Ca2NCX], srhs = [NCX])
    Reac8.kcst = 1000
    
    # Ca + SERCA <->  Ca1SERCA +Ca <->  Ca2SERCA  ->  SERCA
    Reac9 = smodel.SReac('Reac9', ERs, olhs = [Ca], slhs = [SERCA], srhs = [Ca1SERCA])
    Reac9.kcst = 17147e6 
    Reac10 = smodel.SReac('Reac10', ERs, slhs = [Ca1SERCA], orhs = [Ca], srhs = [SERCA])
    Reac10.kcst = 8426.3
    Reac11 = smodel.SReac('Reac11', ERs, olhs = [Ca], slhs = [Ca1SERCA], srhs = [Ca2SERCA])
    Reac11.kcst = 17147e6 
    Reac12 = smodel.SReac('Reac12', ERs, slhs = [Ca2SERCA], orhs = [Ca], srhs = [Ca1SERCA])
    Reac12.kcst = 8426.3
    Reac13 = smodel.SReac('Reac13', ERs, slhs = [Ca2SERCA], srhs = [SERCA], irhs = [Ca,Ca])
    Reac13.kcst = 250
    
    # Leak
    Reac14 = smodel.Reac('Reac14', vsys, rhs = [Ca])    
    # reaction constant for zero-order reaction units M/s in STEPS 1.2 and above
    Reac14.kcst = 1900/(Na*0.08e-15) 
    
    
    
    # PV + Ca <-> CaPV + Ca <-> Ca2PV
    Reac15 = smodel.Reac('Reac15', vsys, lhs = [PV, Ca], rhs = [CaPV])
    Reac15.kcst = 107e6 
    Reac16 = smodel.Reac('Reac16', vsys, lhs = [CaPV], rhs = [PV, Ca])
    Reac16.kcst = 0.95
    Reac17 = smodel.Reac('Reac17', vsys, lhs = [CaPV, Ca], rhs = [Ca2PV])
    Reac17.kcst = 107e6 
    Reac18 = smodel.Reac('Reac18', vsys, lhs = [Ca2PV], rhs = [Ca, CaPV])
    Reac18.kcst = 0.95
    
    
    
    # PV + Mg <-> MgPV <-> Mg2PV, apparent rate constants, [Mg] = 590uM 
    Reac19 = smodel.Reac('Reac19', vsys, lhs = [PV], rhs = [MgPV])
    Reac19.kcst = 472
    Reac20 = smodel.Reac('Reac20', vsys, lhs = [MgPV], rhs = [PV])
    Reac20.kcst = 25
    Reac21 = smodel.Reac('Reac21', vsys, lhs = [MgPV], rhs = [Mg2PV])
    Reac21.kcst = 472
    Reac22 = smodel.Reac('Reac22', vsys, lhs = [Mg2PV], rhs = [MgPV])
    Reac22.kcst = 25
    
    
    
    # CBs + Ca <-> CaCBs + Ca <-> Ca2CBs, CBs - high affinity site
    Reac23 = smodel.Reac('Reac23', vsys, lhs = [CBs, Ca], rhs = [CaCBs])
    Reac23.kcst = 5.5e6
    Reac24 = smodel.Reac('Reac24', vsys, lhs = [CaCBs], rhs = [CBs, Ca])
    Reac24.kcst = 2.6
    Reac25 = smodel.Reac('Reac25', vsys, lhs = [CaCBs, Ca], rhs = [Ca2CBs])
    Reac25.kcst = 5.5e6 
    Reac26 = smodel.Reac('Reac26', vsys, lhs = [Ca2CBs], rhs = [CaCBs, Ca])
    Reac26.kcst = 2.6
    
    
    
    # CBf + Ca <-> CaCBf + Ca <-> Ca2CBf, CBf - medium affinity site
    Reac27 = smodel.Reac('Reac27', vsys, lhs = [CBf, Ca], rhs = [CaCBf])
    Reac27.kcst = 43.5e6 
    Reac28 = smodel.Reac('Reac28', vsys, lhs = [CaCBf], rhs = [CBf, Ca])
    Reac28.kcst = 35.8
    Reac29 = smodel.Reac('Reac29', vsys, lhs = [CaCBf, Ca], rhs = [Ca2CBf])
    Reac29.kcst = 43.5e6 
    Reac30 = smodel.Reac('Reac30', vsys, lhs = [Ca2CBf], rhs = [CaCBf, Ca])
    Reac30.kcst = 35.8
    
    
    
    # PKC + Ca <-> CaPKC + 2Ca <-> Ca3PKC <-> Ca3PKC* (PKCstar)
    Reac31 = smodel.Reac('Reac31', vsys, lhs = [PKC, Ca], rhs = [Ca1PKC])
    Reac31.kcst = 13.3e6
    Reac32 = smodel.Reac('Reac32', vsys, lhs = [Ca1PKC], rhs = [PKC, Ca])
    Reac32.kcst = 12
    Reac33 = smodel.Reac('Reac33', vsys, lhs = [Ca1PKC, Ca, Ca], rhs = [Ca3PKC])
    Reac33.kcst = 1.e12 
    Reac34 = smodel.Reac('Reac34', vsys, lhs = [Ca3PKC], rhs = [Ca1PKC, Ca, Ca])
    Reac34.kcst = 12
    Reac35 = smodel.SReac('Reac35', s, ilhs = [Ca3PKC], srhs = [PKCstar])
    Reac35.kcst = 11.3  
    Reac36 = smodel.SReac('Reac36', s, slhs = [PKCstar], irhs = [Ca3PKC])
    Reac36.kcst = 0.23 
    
    
    
    # PKC + AA <-> AAPKC <-> AAPKC* (PKCstar2)
    Reac37 = smodel.Reac('Reac37', vsys, lhs = [PKC, AA], rhs = [AAPKC])
    Reac37.kcst = 1e6 
    Reac38 = smodel.Reac('Reac38', vsys, lhs = [AAPKC], rhs = [PKC, AA])
    Reac38.kcst = 10
    Reac39 = smodel.SReac('Reac39', s, ilhs = [AAPKC], srhs = [PKCstar2])
    Reac39.kcst = 0.017 
    Reac40 = smodel.SReac('Reac40', s, slhs = [PKCstar2], irhs = [AAPKC])
    Reac40.kcst = 0.0055
    
    
    
    # Ca1PKC + AA <-> AACa1PKC <-> AACa1PKC* (PKCstar3) + 2Ca <-> AACa3PKC* (PKCstar4)
    Reac41 = smodel.Reac('Reac41', vsys, lhs = [Ca1PKC, AA], rhs = [AACa1PKC])
    Reac41.kcst = 1e6 
    Reac42 = smodel.Reac('Reac42', vsys, lhs = [AACa1PKC], rhs = [Ca1PKC, AA])
    Reac42.kcst = 10
    Reac43 = smodel.SReac('Reac43', s, ilhs = [AACa1PKC], srhs = [PKCstar3])
    Reac43.kcst = 0.017 
    Reac44 = smodel.SReac('Reac44', s, slhs = [PKCstar3], irhs = [AACa1PKC])
    Reac44.kcst = 0.0055
    Reac45 = smodel.SReac('Reac45', s, slhs = [PKCstar3], ilhs = [Ca, Ca], srhs = [PKCstar4])
    Reac45.kcst =  1.0e12
    Reac46 = smodel.SReac('Reac46', s, slhs = [PKCstar4], srhs = [PKCstar3], irhs = [Ca, Ca])
    Reac46.kcst = 12
    
    
    
    # AAPKC + Ca <-> AACa1PKC <-> AACa1PKC + 2Ca <-> AACa3PKC  <-> AACa3PKC* (PKCstar4)
    Reac47 = smodel.Reac('Reac47', vsys, lhs = [AAPKC, Ca], rhs = [AACa1PKC])
    Reac47.kcst = 13.3e6
    Reac48 = smodel.Reac('Reac48', vsys, lhs = [AACa1PKC], rhs = [AAPKC, Ca])
    Reac48.kcst = 12
    Reac49 = smodel.Reac('Reac49', vsys, lhs = [AACa1PKC, Ca, Ca], rhs = [AACa3PKC])
    Reac49.kcst = 1.0e12 
    Reac50 = smodel.Reac('Reac50', vsys, lhs = [AACa3PKC], rhs = [AACa1PKC, Ca, Ca])
    Reac50.kcst = 12
    Reac51 = smodel.SReac('Reac51', s, ilhs = [AACa3PKC], srhs = [PKCstar4])
    Reac51.kcst = 11.3 
    Reac52 = smodel.SReac('Reac52', s, slhs = [PKCstar4], irhs = [AACa3PKC])
    Reac52.kcst = 0.23 
    
    
    
    # Ca3PKC + AA <-> AACa3PKC
    Reac53 = smodel.Reac('Reac53', vsys, lhs = [Ca3PKC, AA], rhs = [AACa3PKC])
    Reac53.kcst = 1e6 
    Reac54 = smodel.Reac('Reac54', vsys, lhs = [AACa3PKC], rhs = [Ca3PKC, AA])
    Reac54.kcst = 10
    
    
    
    # AAPKC* + Ca <-> AACa1PKC*
    Reac55 = smodel.SReac('Reac55', s, slhs = [PKCstar2], ilhs = [Ca], srhs = [PKCstar3])
    Reac55.kcst =  13.3e6
    Reac56 = smodel.SReac('Reac56', s, slhs = [PKCstar3], srhs = [PKCstar2], irhs = [Ca])
    Reac56.kcst = 12
    
    
    
    # Ca3PKC* + AA <-> AACa3PKC*
    Reac57 = smodel.SReac('Reac57', s, ilhs = [AA], slhs = [PKCstar], srhs = [PKCstar4])
    Reac57.kcst = 1e6 
    Reac58 = smodel.SReac('Reac58', s, slhs = [PKCstar4], irhs = [AA], srhs = [PKCstar])
    Reac58.kcst = 10
    
    
    
    # Ca3PKC* + RafRKIP <-> Ca3PKC*.RafRKIP -> Ca3PKC* + RafRKIP
    Reac59 = smodel.SReac('Reac59', s, ilhs = [RafRKIP], slhs = [PKCstar], srhs = [RafRKIPPKCstar])
    Reac59.kcst = 0.625e6
    Reac60 = smodel.SReac('Reac60', s, slhs = [RafRKIPPKCstar], irhs = [RafRKIP], srhs = [PKCstar])
    Reac60.kcst = 0.00245
    Reac61 = smodel.SReac('Reac61', s, slhs = [RafRKIPPKCstar], srhs = [PKCstar], irhs = [RKIPstar, Rafstar])
    Reac61.kcst = 0.0315
    
    
    
    # AAPKC* + RafRKIP <-> AAPKC*.RafRKIP -> AAPKC* + RafRKIP
    Reac62 = smodel.SReac('Reac62', s, ilhs = [RafRKIP], slhs = [PKCstar2], srhs = [RafRKIPPKCstar2])
    Reac62.kcst =  0.625e6  
    Reac63 = smodel.SReac('Reac63', s, slhs = [RafRKIPPKCstar2], irhs = [RafRKIP], srhs = [PKCstar2])
    Reac63.kcst = 0.00245
    Reac64 = smodel.SReac('Reac64', s, slhs = [RafRKIPPKCstar2], srhs = [PKCstar2], irhs = [RKIPstar, Rafstar])
    Reac64.kcst =  0.0315
    
    
    
    # AACa1PKC* + RafRKIP -> AACa1PKC*.RafRKIP -> AACa1PKC* + RafRKIP 
    Reac65 = smodel.SReac('Reac65', s, ilhs = [RafRKIP], slhs = [PKCstar3], srhs = [RafRKIPPKCstar3])
    Reac65.kcst =  0.625e6  
    Reac66 = smodel.SReac('Reac66', s, slhs = [RafRKIPPKCstar3], irhs = [RafRKIP], srhs = [PKCstar3])
    Reac66.kcst = 0.00245
    Reac67 = smodel.SReac('Reac67', s, slhs = [RafRKIPPKCstar3], srhs = [PKCstar3], irhs = [RKIPstar, Rafstar])
    Reac67.kcst =  0.0315
    
    
    
    # AACa3PKC* + RafRKIP <-> AACa3PKC*.RafRKIP -> AACa3PKC* + RafRKIP
    Reac68 = smodel.SReac('Reac68', s, ilhs = [RafRKIP], slhs = [PKCstar4], srhs = [RafRKIPPKCstar4])
    Reac68.kcst =  0.625e6  
    Reac69 = smodel.SReac('Reac69', s, slhs = [RafRKIPPKCstar4], irhs = [RafRKIP], srhs = [PKCstar4])
    Reac69.kcst = 0.00245
    Reac70 = smodel.SReac('Reac70', s, slhs = [RafRKIPPKCstar4], srhs = [PKCstar4], irhs = [RKIPstar, Rafstar])
    Reac70.kcst = 0.0315
    
    
    
    # Raf + RKIP --k1-> RafRKIP --k2-> Raf + RKIP
    Reac71 = smodel.Reac('Reac71',vsys, lhs = [Raf , RKIP], rhs = [RafRKIP])
    Reac71.kcst = 0.53e6
    Reac72 = smodel.Reac('Reac72', vsys, lhs = [RafRKIP], rhs =[Raf , RKIP])
    Reac72.kcst = 0.072
    
    
    
    # Ca3PKC* + MEKRKIP <-> Ca3PKC*.MEKRKIP -> Ca3PKC* + MEKRKIP
    Reac303 = smodel.SReac('Reac303', s, ilhs = [MEKRKIP], slhs = [PKCstar], srhs = [MEKRKIPPKCstar])
    Reac303.kcst = 0.625e6
    Reac304 = smodel.SReac('Reac304', s, slhs = [MEKRKIPPKCstar], irhs = [MEKRKIP], srhs = [PKCstar])
    Reac304.kcst = 0.00245
    Reac305 = smodel.SReac('Reac305', s, slhs = [MEKRKIPPKCstar], srhs = [PKCstar], irhs = [RKIPstar, MEKp])
    Reac305.kcst = 0.0315
    
    
    
    # AAPKC* + MEKRKIP <-> AAPKC*.MEKRKIP -> AAPKC* + MEKRKIP
    Reac306 = smodel.SReac('Reac306', s, ilhs = [MEKRKIP], slhs = [PKCstar2], srhs = [MEKRKIPPKCstar2])
    Reac306.kcst =  0.625e6  
    Reac307 = smodel.SReac('Reac307', s, slhs = [MEKRKIPPKCstar2], irhs = [MEKRKIP], srhs = [PKCstar2])
    Reac307.kcst = 0.00245
    Reac308 = smodel.SReac('Reac308', s, slhs = [MEKRKIPPKCstar2], srhs = [PKCstar2], irhs = [MEKp, RKIPstar])
    Reac308.kcst =  0.0315
    
    
    
    # AACa1PKC* + MEKRKIP -> AACa1PKC*.MEKRKIP -> AACa1PKC* + MEKRKIP 
    Reac309 = smodel.SReac('Reac309', s, ilhs = [MEKRKIP], slhs = [PKCstar3], srhs = [MEKRKIPPKCstar3])
    Reac309.kcst =  0.625e6  
    Reac310 = smodel.SReac('Reac310', s, slhs = [MEKRKIPPKCstar3], irhs = [MEKRKIP], srhs = [PKCstar3])
    Reac310.kcst = 0.00245
    Reac311 = smodel.SReac('Reac311', s, slhs = [MEKRKIPPKCstar3], srhs = [PKCstar3], irhs = [MEKp, RKIPstar])
    Reac311.kcst =  0.0315
    
    
    
    # AACa3PKC* + MEKRKIP <-> AACa3PKC*.MEKRKIP -> AACa3PKC* + MEKRKIP
    Reac312 = smodel.SReac('Reac312', s, ilhs = [MEKRKIP], slhs = [PKCstar4], srhs = [MEKRKIPPKCstar4])
    Reac312.kcst =  0.625e6  
    Reac313 = smodel.SReac('Reac313', s, slhs = [MEKRKIPPKCstar4], irhs = [MEKRKIP], srhs = [PKCstar4])
    Reac313.kcst = 0.00245
    Reac314 = smodel.SReac('Reac314', s, slhs = [MEKRKIPPKCstar4], srhs = [PKCstar4], irhs = [RKIPstar, MEKp])
    Reac314.kcst = 0.0315
    
    
    
    # MEK + RKIP --k1-> MEKRKIP --k2-> MEK + RKIP
    Reac315 = smodel.Reac('Reac315',vsys, lhs = [MEK , RKIP], rhs = [MEKRKIP])
    Reac315.kcst = 0.53e6
    Reac316 = smodel.Reac('Reac316', vsys, lhs = [MEKRKIP], rhs =[MEK , RKIP])
    Reac316.kcst = 0.072
    
    
    
    # RKIPstar + RP --k9-> RKIPstarRP --k10-> RKIPstar + RP
    Reac317 = smodel.Reac('Reac317' , vsys, lhs =[RKIPstar, RP], rhs =[RKIPstarRP])
    Reac317.kcst = 0.92e6
    Reac318 = smodel.Reac('Reac318', vsys, lhs =[RKIPstarRP], rhs=[RKIPstar, RP])
    Reac318.kcst = 0.00122
    # RKIPstarRP --k11-> RKIP + RP
    Reac319 = smodel.Reac('Reac319' , vsys, lhs =[RKIPstarRP], rhs = [RKIP, RP])
    Reac319.kcst = 0.87

    
    
    # PP5 (PP) + Raf* <-> PP5.Raf* -> PP5 + Raf
    Reac75 = smodel.Reac('Reac75', vsys, lhs = [PP5, Rafstar], rhs = [PP5Rafstar])
    Reac75.kcst = .55e6 
    Reac76 = smodel.Reac('Reac76', vsys, lhs = [PP5Rafstar], rhs = [PP5, Rafstar])
    Reac76.kcst = 2
    Reac77 = smodel.Reac('Reac77', vsys, lhs = [PP5Rafstar], rhs = [PP5, Raf])
    Reac77.kcst = 0.5
    
    
    
    # Raf* + MEK <-> Raf*.MEK -> Raf* + MEKp <->Raf*.MEKp -> Raf* + MEK* (MEKstar)
    Reac78 = smodel.Reac('Reac78', vsys, lhs = [Rafstar, MEK], rhs = [RafstarMEK])
    Reac78.kcst = 0.65e6 
    Reac79 = smodel.Reac('Reac79', vsys, lhs = [RafstarMEK], rhs = [Rafstar, MEK])
    Reac79.kcst = 0.065
    Reac80 = smodel.Reac('Reac80', vsys, lhs = [RafstarMEK], rhs = [Rafstar, MEKp])
    Reac80.kcst = 1.0
    Reac81 = smodel.Reac('Reac81', vsys, lhs = [Rafstar, MEKp], rhs = [RafstarMEKp])
    Reac81.kcst = 0.65e6 
    Reac82 = smodel.Reac('Reac82', vsys, lhs = [RafstarMEKp], rhs = [Rafstar, MEKp])
    Reac82.kcst = 0.065
    Reac83 = smodel.Reac('Reac83', vsys, lhs = [RafstarMEKp], rhs = [Rafstar, MEKstar])
    Reac83.kcst = 1.0
    
    
    
    # PP2A + MEK* <-> PP2A.MEK* -> PP2A + MEKp <-> PP2A.MEKp -> PP2A + MEK
    Reac84 = smodel.Reac('Reac84', vsys, lhs = [PP2A, MEKstar], rhs = [PP2AMEKstar])
    Reac84.kcst = 0.75e6 
    Reac85 = smodel.Reac('Reac85', vsys, lhs = [PP2AMEKstar], rhs = [PP2A, MEKstar])
    Reac85.kcst = 2
    Reac86 = smodel.Reac('Reac86', vsys, lhs = [PP2AMEKstar], rhs = [PP2A, MEKp])
    Reac86.kcst = 0.5
    Reac87 = smodel.Reac('Reac87', vsys, lhs = [PP2A, MEKp], rhs = [PP2AMEKp])
    Reac87.kcst = 0.75e6 
    Reac88 = smodel.Reac('Reac88', vsys, lhs = [PP2AMEKp], rhs = [PP2A, MEKp])
    Reac88.kcst = 2
    Reac89 = smodel.Reac('Reac89', vsys, lhs = [PP2AMEKp], rhs = [PP2A, MEK])
    Reac89.kcst = 0.5
    
    
    
    # MEK* + ERK <-> MEK*.ERK -> MEK* + ERKp <-> MEK*.ERKp -> MEK* + ERK* (ERKstar)
    Reac90 = smodel.Reac('Reac90', vsys, lhs = [MEKstar, ERK], rhs = [MEKstarERK])
    Reac90.kcst = 16.2e6 
    Reac91 = smodel.Reac('Reac91', vsys, lhs = [MEKstarERK], rhs = [MEKstar, ERK])
    Reac91.kcst = 0.6
    Reac92 = smodel.Reac('Reac92', vsys, lhs = [MEKstarERK], rhs = [MEKstar, ERKp])
    Reac92.kcst = 0.15
    Reac93 = smodel.Reac('Reac93', vsys, lhs = [MEKstar, ERKp], rhs = [MEKstarERKp])
    Reac93.kcst = 16.2e6 
    Reac94 = smodel.Reac('Reac94', vsys, lhs = [MEKstarERKp], rhs = [MEKstar, ERKp])
    Reac94.kcst = 0.6
    Reac95 = smodel.Reac('Reac95', vsys, lhs = [MEKstarERKp], rhs = [MEKstar, ERKstar])
    Reac95.kcst = 0.3 
    
    
    
    # MKP + ERK* <-> MKP.ERK* -> MKP + ERKp <-> MKP.ERKp -> MKP + ERK
    Reac96 = smodel.Reac('Reac96', vsys, lhs = [MKP, ERKstar], rhs = [MKPERKstar])
    Reac96.kcst = 13e6 
    Reac97 = smodel.Reac('Reac97', vsys, lhs = [MKPERKstar], rhs = [MKP, ERKstar])
    Reac97.kcst = 0.396
    Reac98 = smodel.Reac('Reac98', vsys, lhs = [MKPERKstar], rhs = [MKP, ERKp])
    Reac98.kcst = 0.099 
    Reac99 = smodel.Reac('Reac99', vsys, lhs = [MKP, ERKp], rhs = [MKPERKp])
    Reac99.kcst = 28e6 
    Reac100 = smodel.Reac('Reac100', vsys, lhs = [MKPERKp], rhs = [MKP, ERKp])
    Reac100.kcst = 0.56
    Reac101 = smodel.Reac('Reac101', vsys, lhs = [MKPERKp], rhs = [MKP, ERK])
    Reac101.kcst = 0.14 
    
    
    
    # Ca + PLA2 <-> Ca1PLA2 + Ca <-> Ca2PLA2 <-> Ca2PLA2* (PLA2star1)
    Reac102 = smodel.Reac('Reac102', vsys, lhs = [PLA2, Ca], rhs = [Ca1PLA2])
    Reac102.kcst = 1.93e6
    Reac103 = smodel.Reac('Reac103', vsys, lhs = [Ca1PLA2], rhs = [PLA2, Ca])
    Reac103.kcst = 108
    Reac104 = smodel.Reac('Reac104', vsys, lhs = [Ca, Ca1PLA2], rhs = [Ca2PLA2])
    Reac104.kcst = 10.8e6 
    Reac105 = smodel.Reac('Reac105', vsys, lhs = [Ca2PLA2], rhs = [Ca1PLA2, Ca])
    Reac105.kcst = 108
    Reac106 = smodel.SReac('Reac106', s, ilhs = [Ca2PLA2], srhs = [PLA2star1])
    Reac106.kcst = 300 
    Reac107 = smodel.SReac('Reac107', s, slhs = [PLA2star1], irhs = [Ca2PLA2])
    Reac107.kcst = 15
    
    
    
    # Ca1PLA2 <-> Ca1PLA2memb
    Reac108 = smodel.SReac('Reac108', s, ilhs = [Ca1PLA2],  srhs = [Ca1PLA2memb])
    Reac108.kcst = 30
    Reac109 = smodel.SReac('Reac109', s, slhs = [Ca1PLA2memb], irhs = [Ca1PLA2])
    Reac109.kcst = 15
    
    
    
    # PLA2 <-> PLA2memb 
    Reac110 = smodel.SReac('Reac110', s, ilhs = [PLA2], srhs = [PLA2memb])
    Reac110.kcst = 3
    Reac111 = smodel.SReac('Reac111', s, slhs = [PLA2memb], irhs = [PLA2])
    Reac111.kcst = 15
    
    
    
    # PLA2memb + Ca <-> Ca1PLA2memb + Ca <-> Ca2PLA2* (PLA2star1)
    Reac112 = smodel.SReac('Reac112', s, slhs = [PLA2memb], ilhs = [Ca], srhs = [Ca1PLA2memb])
    Reac112.kcst = 1.93e6
    Reac113 = smodel.SReac('Reac113', s, ilhs = [Ca1PLA2memb], srhs = [PLA2memb], irhs = [Ca])
    Reac113.kcst = 0.41
    Reac114 = smodel.SReac('Reac114', s, slhs = [Ca1PLA2memb], ilhs = [Ca], srhs = [PLA2star1])
    Reac114.kcst = 10.8e6 
    Reac115 = smodel.SReac('Reac115', s, ilhs = [PLA2star1], srhs = [Ca1PLA2memb], irhs = [Ca])
    Reac115.kcst = 2.5
    
    
    
    # PLA2star1 <-> PLA2star1APC -> PLA2star1 + AA
    Reac116 = smodel.SReac('Reac116', s, slhs = [PLA2star1],  srhs = [PLA2star1APC])
    Reac116.kcst = 43  
    Reac117 = smodel.SReac('Reac117', s, slhs = [PLA2star1APC],  srhs = [PLA2star1])
    Reac117.kcst = 600
    Reac118 = smodel.SReac('Reac118', s, slhs = [PLA2star1APC], irhs = [AA], srhs = [PLA2star1])
    Reac118.kcst = 450
    
    
    
    # ERK* + PLA2 <-> ERK*.PLA2 -> ERK* + PLA2p (PLA2star2)
    Reac119 = smodel.Reac('Reac119', vsys, lhs = [ERKstar, PLA2], rhs = [ERKstarPLA2])
    Reac119.kcst = 4e6 
    Reac120 = smodel.Reac('Reac120', vsys, lhs = [ERKstarPLA2], rhs = [ERKstar, PLA2])
    Reac120.kcst = 1
    Reac121 = smodel.Reac('Reac121', vsys, lhs = [ERKstarPLA2], rhs = [ERKstar, PLA2star2])
    Reac121.kcst = 14
    
    
    
    # ERK* + Ca1PLA2 <-> ERK*.Ca1PLA2 -> ERK* + Ca1PLA2p (Ca1PLA2star2)
    Reac122 = smodel.Reac('Reac122', vsys, lhs = [ERKstar, Ca1PLA2], rhs = [ERKstarCa1PLA2])
    Reac122.kcst = 4e6 
    Reac123 = smodel.Reac('Reac123', vsys, lhs = [ERKstarCa1PLA2], rhs = [ERKstar, Ca1PLA2])
    Reac123.kcst = 1
    Reac124 = smodel.Reac('Reac124', vsys, lhs = [ERKstarCa1PLA2], rhs = [ERKstar, Ca1PLA2star2])
    Reac124.kcst = 14
    
    
    
    # ERK* + Ca2PLA2 <-> ERK*.Ca2PLA2 -> ERK* + Ca2PLA2p (Ca2PLA2star2)
    Reac125 = smodel.Reac('Reac125', vsys, lhs = [ERKstar, Ca2PLA2], rhs = [ERKstarCa2PLA2])
    Reac125.kcst = 4e6 
    Reac126 = smodel.Reac('Reac126', vsys, lhs = [ERKstarCa2PLA2], rhs = [ERKstar, Ca2PLA2])
    Reac126.kcst = 1
    Reac127 = smodel.Reac('Reac127', vsys, lhs = [ERKstarCa2PLA2], rhs = [ERKstar, Ca2PLA2star2])
    Reac127.kcst = 14
    
    
    # PP2A + PLA2p <-> PP2A.PLA2p -> PP2A + PLA2
    Reac128 = smodel.Reac('Reac128', vsys, lhs = [PP2A, PLA2star2], rhs = [PP2APLA2star2])
    Reac128.kcst = 1.4e6
    Reac129 = smodel.Reac('Reac129', vsys, lhs = [PP2APLA2star2], rhs = [PP2A, PLA2star2])
    Reac129.kcst = 1.5
    Reac130 = smodel.Reac('Reac130', vsys, lhs = [PP2APLA2star2], rhs = [PLA2, PP2A])
    Reac130.kcst = 2.5
    
    
    
    # PP2A + Ca1PLA2p <-> PP2A.Ca1PLA2p -> PP2A + Ca1PLA2
    Reac131 = smodel.Reac('Reac131', vsys, lhs = [PP2A, Ca1PLA2star2], rhs = [PP2ACa1PLA2star2])
    Reac131.kcst = 1.4e6
    Reac132 = smodel.Reac('Reac132', vsys, lhs = [PP2ACa1PLA2star2], rhs = [PP2A, Ca1PLA2star2])
    Reac132.kcst = 1.5 
    Reac133 = smodel.Reac('Reac133', vsys, lhs = [PP2ACa1PLA2star2], rhs = [PP2A, Ca1PLA2])
    Reac133.kcst = 2.5
    
    
    
    # PP2A + Ca2PLA2p <-> PP2A.Ca2PLA2p -> PP2A + Ca2PLA2
    Reac134 = smodel.Reac('Reac134', vsys, lhs = [PP2A, Ca2PLA2star2], rhs = [PP2ACa2PLA2star2])
    Reac134.kcst = 1.4e6
    Reac135 = smodel.Reac('Reac135', vsys, lhs = [PP2ACa2PLA2star2], rhs = [PP2A, Ca2PLA2star2])
    Reac135.kcst = 1.5 
    Reac136 = smodel.Reac('Reac136', vsys, lhs = [PP2ACa2PLA2star2], rhs = [PP2A, Ca2PLA2])
    Reac136.kcst = 2.5    
    
    
    
    # PP1 + PLA2p <-> PP1.PLA2p -> PP1 + PLA2
    Reac137 = smodel.Reac('Reac137', vsys, lhs = [PP1, PLA2star2], rhs = [PP1PLA2star2])
    Reac137.kcst = 1.4e6
    Reac138 = smodel.Reac('Reac138', vsys, lhs = [PP1PLA2star2], rhs = [PP1, PLA2star2])
    Reac138.kcst = 1.5
    Reac139 = smodel.Reac('Reac139', vsys, lhs = [PP1PLA2star2], rhs = [PLA2, PP1])
    Reac139.kcst = 2.5
    
    
    
    # PP1 + Ca1PLA2p <-> PP1.Ca1PLA2p -> PP1 + Ca1PLA2
    Reac140 = smodel.Reac('Reac140', vsys, lhs = [PP1, Ca1PLA2star2], rhs = [PP1Ca1PLA2star2])
    Reac140.kcst = 1.4e6
    Reac141 = smodel.Reac('Reac141', vsys, lhs = [PP1Ca1PLA2star2], rhs = [PP1, Ca1PLA2star2])
    Reac141.kcst = 1.5
    Reac142 = smodel.Reac('Reac142', vsys, lhs = [PP1Ca1PLA2star2], rhs = [PP1, Ca1PLA2])
    Reac142.kcst = 2.5
    
    
    
    # PP1 + Ca2PLA2p <-> PP1.Ca2PLA2p -> PP1 + Ca2PLA2
    Reac143 = smodel.Reac('Reac143', vsys, lhs = [PP1, Ca2PLA2star2], rhs = [PP1Ca2PLA2star2])
    Reac143.kcst = 1.4e6
    Reac144 = smodel.Reac('Reac144', vsys, lhs = [PP1Ca2PLA2star2], rhs = [PP1, Ca2PLA2star2])
    Reac144.kcst = 1.5
    Reac145 = smodel.Reac('Reac145', vsys, lhs = [PP1Ca2PLA2star2], rhs = [PP1, Ca2PLA2])
    Reac145.kcst = 2.5
    
    
    
    # PLA2p <-> PLA2** (PLA2star2memb) <-> PLA2**APC -> PLA2** + AA 
    Reac146 = smodel.SReac('Reac146', s, ilhs = [PLA2star2],  srhs = [PLA2star2memb])
    Reac146.kcst = 50
    Reac147 = smodel.SReac('Reac147', s, slhs = [PLA2star2memb], irhs = [PLA2star2])
    Reac147.kcst = 15
    Reac148 = smodel.SReac('Reac148', s, slhs = [PLA2star2memb],  srhs = [PLA2star2membAPC])
    Reac148.kcst = 43 
    Reac149 = smodel.SReac('Reac149', s, slhs = [PLA2star2membAPC],  srhs = [PLA2star2memb])
    Reac149.kcst = 600
    Reac150 = smodel.SReac('Reac150', s, slhs = [PLA2star2membAPC], srhs = [PLA2star2memb], irhs = [AA])
    Reac150.kcst = 3600 
    
    
    
    # Ca1PLA2p <-> Ca1PLA2** (Ca1PLA2star2memb) <-> Ca1PLA2**APC -> Ca1PLA2** + AA
    Reac151 = smodel.SReac('Reac151', s, ilhs = [Ca1PLA2star2], srhs = [Ca1PLA2star2memb])
    Reac151.kcst = 30
    Reac152 = smodel.SReac('Reac152', s, slhs = [Ca1PLA2star2memb], irhs = [Ca1PLA2star2])
    Reac152.kcst = 15
    Reac153 = smodel.SReac('Reac153', s, slhs = [Ca1PLA2star2memb],  srhs = [Ca1PLA2star2membAPC])
    Reac153.kcst = 43 
    Reac154 = smodel.SReac('Reac154', s, slhs = [Ca1PLA2star2membAPC],  srhs = [Ca1PLA2star2memb])
    Reac154.kcst = 600
    Reac155 = smodel.SReac('Reac155', s, slhs = [Ca1PLA2star2membAPC], srhs = [Ca1PLA2star2memb], irhs = [AA])
    Reac155.kcst = 3600
    
    
    
    # Ca2PLA2p <-> Ca2PLA2** (Ca2PLA2star2memb) <-> Ca2PLA2**APC -> Ca2PLA2** + AA
    Reac156 = smodel.SReac('Reac156', s, ilhs = [Ca2PLA2star2], srhs = [Ca2PLA2star2memb])
    Reac156.kcst = 300
    Reac157 = smodel.SReac('Reac157', s, slhs = [Ca2PLA2star2memb], irhs = [Ca2PLA2star2])
    Reac157.kcst = 15   
    Reac158 = smodel.SReac('Reac158', s, slhs = [Ca2PLA2star2memb],  srhs = [Ca2PLA2star2membAPC])
    Reac158.kcst = 43 
    Reac159 = smodel.SReac('Reac159', s, slhs = [Ca2PLA2star2membAPC],  srhs = [Ca2PLA2star2memb])
    Reac159.kcst = 600
    Reac160 = smodel.SReac('Reac160', s, slhs = [Ca2PLA2star2membAPC], srhs = [Ca2PLA2star2memb], irhs = [AA])
    Reac160.kcst = 3600
    
    
    
    # Ca + PLA2p <-> Ca1PLA2p
    Reac161 = smodel.Reac('Reac161', vsys, lhs = [PLA2star2, Ca], rhs = [Ca1PLA2star2])
    Reac161.kcst = 1.93e6 
    Reac162 = smodel.Reac('Reac162', vsys, lhs = [Ca1PLA2star2], rhs = [PLA2star2, Ca])
    Reac162.kcst = 108
    
    
    
    # Ca + PLA2** <-> Ca1PLA2**
    Reac163 = smodel.SReac('Reac163', s, slhs = [PLA2star2memb], ilhs = [Ca], srhs = [Ca1PLA2star2memb])
    Reac163.kcst = 1.93e6 
    Reac164 = smodel.SReac('Reac164', s, ilhs = [Ca1PLA2star2memb], srhs = [PLA2star2memb], irhs = [Ca])
    Reac164.kcst = 0.41
    
    
    
    # Ca + Ca1PLA2p <-> Ca2PLA2p
    Reac165 = smodel.Reac('Reac165', vsys, lhs = [Ca, Ca1PLA2star2], rhs = [Ca2PLA2star2])
    Reac165.kcst = 10.8e6 
    Reac166 = smodel.Reac('Reac166', vsys, lhs = [Ca2PLA2star2], rhs = [Ca1PLA2star2, Ca])
    Reac166.kcst = 108
    
    
    
    # Ca + Ca1PLA2** <-> Ca2PLA2**
    Reac167 = smodel.SReac('Reac167', s, slhs = [Ca1PLA2star2memb], ilhs = [Ca], srhs = [Ca2PLA2star2memb])
    Reac167.kcst = 10.8e6
    Reac168 = smodel.SReac('Reac168', s, ilhs = [Ca2PLA2star2memb], srhs = [Ca1PLA2star2memb], irhs = [Ca])
    Reac168.kcst = 2.5
    
    
    
    # AA -> 0 ,degradation
    Reac169 = smodel.SReac('Reac169', s, ilhs = [AA])
    Reac169.kcst = .4
    
    
    
    # Ca3PKC* + AMPAR <-> Ca3PKC*.AMPAR -> Ca3PKC* + AMPARp 
    Reac170 = smodel.SReac('Reac170', s, slhs = [PKCstar, AMPAR], srhs = [PKCstarAMPAR])
    # units for 2D reaction based on square meters in STEPS 1.2 and above
    # units for 2nd-order reaction are m^2/mol.s
    Reac170.kcst = 0.4e6*(1.02e-12/1.87e-19)
    Reac171 = smodel.SReac('Reac171', s, slhs = [PKCstarAMPAR], srhs = [PKCstar, AMPAR])
    Reac171.kcst = 0.8
    Reac172 = smodel.SReac('Reac172', s, slhs = [PKCstarAMPAR], srhs = [PKCstar, AMPAR_P])
    Reac172.kcst = 0.3
    
    
    
    # AAPKC* + AMPAR <-> AAPKC*.AMPAR -> AAPKC* + AMPARp
    Reac173 = smodel.SReac('Reac173', s, slhs = [PKCstar2, AMPAR], srhs = [PKCstar2AMPAR])
    # units for 2D reaction based on square meters in STEPS 1.2 and above
    # units for 2nd-order reaction are m^2/mol.s
    Reac173.kcst = 0.4e6*(1.02e-12/1.87e-19)*1
    Reac174 = smodel.SReac('Reac174', s, slhs = [PKCstar2AMPAR], srhs = [PKCstar2, AMPAR])
    Reac174.kcst = 0.8
    Reac175 = smodel.SReac('Reac175', s, slhs = [PKCstar2AMPAR], srhs = [PKCstar2, AMPAR_P])
    Reac175.kcst = 0.3
    
    
    
    # AACa1PKC* + AMPAR <-> AACa1PKC*.AMPAR -> AACa1PKC* + AMPARp
    Reac176 = smodel.SReac('Reac176', s, slhs = [PKCstar3, AMPAR], srhs = [PKCstar3AMPAR])
    # units for 2D reaction based on square meters in STEPS 1.2 and above
    # units for 2nd-order reaction are m^2/mol.s
    Reac176.kcst = 0.4e6*(1.02e-12/1.87e-19)   
    Reac177 = smodel.SReac('Reac177', s, slhs = [PKCstar3AMPAR], srhs = [PKCstar3, AMPAR])
    Reac177.kcst = 0.8
    Reac178 = smodel.SReac('Reac178', s, slhs = [PKCstar3AMPAR], srhs = [PKCstar3, AMPAR_P])
    Reac178.kcst =  0.3
    
    
    
    # AACa3PKC* + AMPAR <-> AACa3PKC*.AMPAR -> AACa3PKC* + AMPARp 
    Reac179 = smodel.SReac('Reac179', s, slhs = [PKCstar4, AMPAR], srhs = [PKCstar4AMPAR])
    # units for 2D reaction based on square meters in STEPS 1.2 and above
    # units for 2nd-order reaction are m^2/mol.s
    Reac179.kcst = 0.4e6*(1.02e-12/1.87e-19)  
    Reac180 = smodel.SReac('Reac180', s, slhs = [PKCstar4AMPAR], srhs = [PKCstar4, AMPAR])
    Reac180.kcst = 0.8 
    Reac181 = smodel.SReac('Reac181', s, slhs = [PKCstar4AMPAR], srhs = [PKCstar4, AMPAR_P])
    Reac181.kcst = 0.3
    
    
    
    # PP2A + AMPARp <-> PP2A.AMPARp -> PP2A + AMPAR
    Reac182 = smodel.SReac('Reac182', s, ilhs = [PP2A], slhs = [AMPAR_P], srhs = [PP2AAMPAR_P])
    Reac182.kcst = 1.2e6
    Reac183 = smodel.SReac('Reac183', s, slhs = [PP2AAMPAR_P], irhs = [PP2A], srhs = [AMPAR_P])
    Reac183.kcst = 0.17
    Reac184 = smodel.SReac('Reac184', s, slhs = [PP2AAMPAR_P], srhs = [AMPAR], irhs = [PP2A])
    Reac184.kcst = 0.25 
    
    
    
    # AMPAR + GRIP <-> GRIP.AMPA
    Reac185 = smodel.SReac('Reac185', s, slhs = [AMPAR, GRIP], srhs = [GRIPAMPAR])
    # units for 2D reaction based on square meters in STEPS 1.2 and above
    # units for 2nd-order reaction are m^2/mol.s
    Reac185.kcst = 1e6*(1.02e-12/1.87e-19)
    Reac186 = smodel.SReac('Reac186', s, slhs = [GRIPAMPAR], srhs = [GRIP, AMPAR])
    Reac186.kcst = 7
    
    
    
    # AMPARp + GRIP <-> GRIP.AMPAp (AMPAR = synaptic AMPAR)
    Reac187 = smodel.SReac('Reac187', s, slhs = [AMPAR_P, GRIP], srhs = [GRIPAMPAR_P])
    # units for 2D reaction based on square meters in STEPS 1.2 and above
    # units for 2nd-order reaction are m^2/mol.s
    Reac187.kcst = 1e6*(1.02e-12/1.87e-19)
    Reac188 = smodel.SReac('Reac188', s, slhs = [GRIPAMPAR_P], srhs = [GRIP, AMPAR_P])
    Reac188.kcst = 70
    
    
    
    # AMPAR <-> AMPARextra (AMPARextra = extra-synaptic AMPAR)  
    Reac189 = smodel.SReac('Reac189', s, slhs = [AMPAR], srhs = [AMPARextra])
    Reac189.kcst = 0.1
    Reac190 = smodel.SReac('Reac190', s, slhs = [AMPARextra], srhs = [AMPAR])
    Reac190.kcst = 0.02
    
    
    
    # AMPARp <-> AMPARextra_P
    Reac191 = smodel.SReac('Reac191', s, slhs = [AMPAR_P], srhs = [AMPARextra_P])
    Reac191.kcst =  0.1
    Reac192 = smodel.SReac('Reac192', s, slhs = [AMPARextra_P], srhs = [AMPAR_P])
    Reac192.kcst = 0.02
    
    
    
    # PP2A + AMPARextra_P  <-> PP2A.AMPARextra_P  -> PP2A + AMPARextra
    Reac193 = smodel.SReac('Reac193', s, ilhs = [PP2A], slhs = [AMPARextra_P], srhs = [PP2AAMPARextra_P])
    Reac193.kcst = 1.2e6
    Reac194 = smodel.SReac('Reac194', s, slhs = [PP2AAMPARextra_P], irhs = [PP2A], srhs = [AMPARextra_P])
    Reac194.kcst = 0.17
    Reac195 = smodel.SReac('Reac195', s, slhs = [PP2AAMPARextra_P], srhs = [AMPARextra], irhs = [PP2A])
    Reac195.kcst = 0.25
    
    
    
    # AMPARextra <-> AMPARdend (AMPARdend = dendritic AMPAR)  
    Reac196 = smodel.SReac('Reac196', s, slhs = [AMPARextra], srhs = [AMPARdend])
    Reac196.kcst = 0.02
    Reac197 = smodel.SReac('Reac197', s, slhs = [AMPARdend], srhs = [AMPARextra])
    Reac197.kcst = 0.00025
    
    
    
    # AMPARextra_P <-> AMPARdend_P 
    Reac198 = smodel.SReac('Reac198', s, slhs = [AMPARextra_P], srhs = [AMPARdend_P])
    Reac198.kcst =  0.02
    Reac199 = smodel.SReac('Reac199', s, slhs = [AMPARdend_P], srhs = [AMPARextra_P])
    Reac199.kcst = 0.00025
    
    
    
    # PP2A + AMPARp_dend  <-> PP2A.AMPARp_dend  -> PP2A + AMPAR_dend
    Reac200 = smodel.SReac('Reac200', s, ilhs = [PP2A], slhs = [AMPARdend_P], srhs = [PP2AAMPARdend_P])
    Reac200.kcst = 1.2e6
    Reac201 = smodel.SReac('Reac201', s, slhs = [PP2AAMPARdend_P], irhs = [PP2A], srhs = [AMPARdend_P])
    Reac201.kcst = 0.17
    Reac202 = smodel.SReac('Reac202', s, slhs = [PP2AAMPARdend_P], srhs = [AMPARdend], irhs = [PP2A])
    Reac202.kcst = 0.25
    
    
    
    # AMPARdend_P <-> AMPARcyt_P (AMPARcyt = cytosolic AMPAR) 
    Reac203 = smodel.SReac('Reac203', s, slhs = [AMPARdend_P], irhs = [AMPARcyt_P])
    Reac203.kcst =  0.003
    Reac204 = smodel.SReac('Reac204', s, ilhs = [AMPARcyt_P], srhs = [AMPARdend_P])
    Reac204.kcst =  0.002
    
    
    
    # PP2A + AMPARcyt_P  <-> PP2A.AMPARcyt_P  -> PP2A + AMPARcyt 
    Reac205 = smodel.Reac('Reac205', vsys, lhs = [PP2A, AMPARcyt_P], rhs = [PP2AAMPARcyt_P])
    Reac205.kcst = 1.2e6
    Reac206 = smodel.Reac('Reac206', vsys, lhs = [PP2AAMPARcyt_P], rhs = [PP2A, AMPARcyt_P])
    Reac206.kcst = 0.17
    Reac207 = smodel.Reac('Reac207', vsys, lhs = [PP2AAMPARcyt_P], rhs = [AMPARcyt, PP2A])
    Reac207.kcst = 0.25
    
    # CaM + Ca <-> CaM1Ca <-> CaM2Ca <-> CaM3Ca 
    Reac208 = smodel.Reac('Reac208', vsys, lhs = [CaM, Ca], rhs = [CaM1Ca])
    Reac208.kcst = 4e6
    Reac209 = smodel.Reac('Reac209', vsys, lhs = [CaM1Ca], rhs = [CaM, Ca])
    Reac209.kcst = 100
    Reac210 = smodel.Reac('Reac210', vsys, lhs = [CaM1Ca,Ca], rhs = [CaM2Ca])
    Reac210.kcst = 40e6
    Reac211 = smodel.Reac('Reac211', vsys, lhs = [CaM2Ca], rhs = [CaM1Ca, Ca])
    Reac211.kcst = 640
    Reac212 = smodel.Reac('Reac212', vsys, lhs = [CaM2Ca, Ca], rhs = [CaM3Ca])
    Reac212.kcst = 40e6
    Reac213 = smodel.Reac('Reac213', vsys, lhs = [CaM3Ca], rhs = [CaM2Ca, Ca])
    Reac213.kcst = 700
    
    # CaN + CaM3Ca <-> CaM3CaCaN
    Reac214 = smodel.Reac('Reac214', vsys, lhs = [CaN, CaM3Ca] , rhs = [CaM3CaCaN])
    Reac214.kcst = 400e6
    Reac215 = smodel.Reac('Reac215', vsys, lhs = [CaM3CaCaN], rhs = [CaN,CaM3Ca])
    Reac215.kcst = 3 

    # CaMKII + CaM3Ca <-> CaM3Ca_CaMKII
    Reac216 = smodel.Reac('Reac216', vsys, lhs = [CaMKII, CaM3Ca], rhs = [CaM3Ca_CaMKII])
    Reac216.kcst = 400e6
    Reac217 = smodel.Reac('Reac217', vsys, lhs = [CaM3Ca_CaMKII], rhs = [CaMKII, CaM3Ca])
    Reac217.kcst = 8

    # CaM3Ca_CaMKII + calc_3_3 -> CaM3Ca_pT286287
    Reac218 = smodel.Reac('Reac218', vsys, lhs = [CaM3Ca_CaMKII,calc_3_3], rhs = [CaM3Ca_pT286287])
    Reac218.kcst = 11e6

    # CaM3Ca_pT286287 + PP1 <-> CaM3Ca_pT286287_PP1 -> CaM3Ca_CaMKII + PP1
    Reac219 = smodel.Reac('Reac219', vsys, lhs = [CaM3Ca_pT286287 , PP1], rhs = [CaM3Ca_pT286287_PP1])
    Reac219.kcst = 3.3333e6
    Reac220 = smodel.Reac('Reac220', vsys, lhs = [CaM3Ca_pT286287_PP1], rhs = [CaM3Ca_pT286287, PP1] )
    Reac220.kcst = 8
    Reac221 = smodel.Reac('Reac221', vsys, lhs = [CaM3Ca_pT286287_PP1], rhs = [CaM3Ca_CaMKII,PP1])
    Reac221.kcst = 2

    # CaM3Ca_pT286287 + PP2A <-> CaM3Ca_pT286287_PP2A -> CaM3Ca_CaMKII + PP2A
    Reac222 = smodel.Reac('Reac222', vsys, lhs = [CaM3Ca_pT286287 , PP2A], rhs = [CaM3Ca_pT286287_PP2A])
    Reac222.kcst = 0.2e6
    Reac223 = smodel.Reac('Reac223', vsys, lhs = [CaM3Ca_pT286287_PP2A], rhs = [CaM3Ca_pT286287, PP2A] )
    Reac223.kcst = 0.8
    Reac224 = smodel.Reac('Reac224', vsys, lhs = [CaM3Ca_pT286287_PP2A], rhs = [CaM3Ca_CaMKII, PP2A])
    Reac224.kcst = 0.2

    # pT286287 + CaM3Ca <-> CaM3Ca_pT286287
    Reac225 = smodel.Reac('Reac225', vsys, lhs = [pT286287, CaM3Ca], rhs = [CaM3Ca_pT286287])
    Reac225.kcst = 400e6
    Reac226 = smodel.Reac('Reac226', vsys, lhs = [CaM3Ca_pT286287], rhs = [pT286287, CaM3Ca])
    Reac226.kcst = 0.24

    # pT286287 -> pT286287_pT308306
    Reac227 = smodel.Reac('Reac227', vsys, lhs = [pT286287,calc_3_3], rhs = [pT286287_pT308306])
    Reac227.kcst = 0.5e6

    # pT286287_pT308306 + PP1 <-> pT286287_pT308306_PP1 -> pT286287 + PP1 
    Reac228 = smodel.Reac('Reac228', vsys, lhs = [pT286287_pT308306, PP1], rhs = [pT286287_pT308306_PP1])
    Reac228.kcst = 3.3333e6
    Reac229 = smodel.Reac('Reac229', vsys, lhs = [pT286287_pT308306_PP1], rhs =[pT286287_pT308306, PP1])
    Reac229.kcst = 8
    Reac230 = smodel.Reac('Reac230', vsys, lhs = [pT286287_pT308306_PP1], rhs = [pT286287, PP1])
    Reac230.kcst = 2

    # pT286287_pT308306 + PP2A <-> pT286287_pT308306_PP2A -> pT286287 + PP2A
    Reac231 = smodel.Reac('Reac231', vsys, lhs = [pT286287_pT308306, PP2A], rhs = [pT286287_pT308306_PP2A])
    Reac231.kcst = 0.2e6
    Reac232 = smodel.Reac('Reac232', vsys, lhs = [pT286287_pT308306_PP2A], rhs =[pT286287_pT308306, PP2A])
    Reac232.kcst = 0.8
    Reac233 = smodel.Reac('Reac233', vsys, lhs = [pT286287_pT308306_PP2A], rhs = [pT286287, PP2A])
    Reac233.kcst =  0.2

    # pT286287 + PP1 <-> pT286287_PP1 -> CaMKII + PP1
    Reac234 = smodel.Reac('Reac234', vsys, lhs = [pT286287, PP1], rhs = [pT286287_PP1])
    Reac234.kcst = 3.3333e6
    Reac235 = smodel.Reac('Reac235', vsys, lhs = [pT286287_PP1], rhs =[pT286287, PP1])
    Reac235.kcst = 8
    Reac236 = smodel.Reac('Reac236', vsys, lhs = [pT286287_PP1], rhs = [CaMKII, PP1])
    Reac236.kcst = 2

    # pT286287 + PP2A <-> pT286287_PP2A -> CaMKII + PP2A
    Reac237 = smodel.Reac('Reac237', vsys, lhs = [pT286287, PP2A], rhs = [pT286287_PP2A])
    Reac237.kcst = 0.2e6
    Reac238 = smodel.Reac('Reac238', vsys, lhs = [pT286287_PP2A], rhs =[pT286287, PP2A])
    Reac238.kcst = 0.8
    Reac239 = smodel.Reac('Reac239', vsys, lhs = [pT286287_PP2A], rhs = [CaMKII, PP2A])
    Reac239.kcst = 0.2

    # pT286287_pT308306 + PP1 <-> pT286287_pT308306_PP1_2 -> pT308306 + PP1
    Reac240 = smodel.Reac('Reac240', vsys, lhs = [pT286287_pT308306, PP1], rhs = [pT286287_pT308306_PP1_2])
    Reac240.kcst = 3.3333e6
    Reac241 = smodel.Reac('Reac241', vsys, lhs = [pT286287_pT308306_PP1_2], rhs =[pT286287_pT308306, PP1])
    Reac241.kcst = 8
    Reac242 = smodel.Reac('Reac242', vsys, lhs = [pT286287_pT308306_PP1_2], rhs = [pT308306, PP1])
    Reac242.kcst = 2

    # pT286287_pT308306 + PP2A <-> pT286287_pT308306_PP2A_2 -> pT308306 + PP2A
    Reac243 = smodel.Reac('Reac243', vsys, lhs = [pT286287_pT308306, PP2A], rhs = [pT286287_pT308306_PP2A_2])
    Reac243.kcst = 0.2e6
    Reac244 = smodel.Reac('Reac244', vsys, lhs = [pT286287_pT308306_PP2A_2], rhs =[pT286287_pT308306, PP2A])
    Reac244.kcst = 0.8
    Reac245 = smodel.Reac('Reac245', vsys, lhs = [pT286287_pT308306_PP2A_2], rhs = [pT308306, PP2A])
    Reac245.kcst = 0.2

 
    # pT308306 + PP1 <-> pT308306_PP1 -> CaMKII + PP1
    Reac246 = smodel.Reac('Reac246', vsys, lhs = [pT308306, PP1], rhs = [pT308306_PP1])
    Reac246.kcst = 3.3333e6
    Reac247 = smodel.Reac('Reac247', vsys, lhs = [pT308306_PP1], rhs =[pT308306, PP1])
    Reac247.kcst = 8
    Reac248 = smodel.Reac('Reac248', vsys, lhs = [pT308306_PP1], rhs = [CaMKII, PP1])
    Reac248.kcst = 2

    # pT308306 + PP2A <-> pT308306_PP2A -> CaMKII + PP2A
    Reac249 = smodel.Reac('Reac249', vsys, lhs = [pT308306, PP2A], rhs = [pT308306_PP2A])
    Reac249.kcst = 0.2e6
    Reac250 = smodel.Reac('Reac250', vsys, lhs = [pT308306_PP2A], rhs =[pT308306, PP2A])
    Reac250.kcst = 0.8
    Reac251 = smodel.Reac('Reac251', vsys, lhs = [pT308306_PP2A], rhs = [CaMKII, PP2A])
    Reac251.kcst = 0.2

    # GC + NO <-> GC_NO
    Reac252 = smodel.Reac('Reac252', vsys, lhs = [GC,NO], rhs = [GC_NO])
    Reac252.kcst = 1e6
    Reac253 = smodel.Reac('Reac253', vsys, lhs = [GC_NO], rhs = [GC,NO])
    Reac253.kcst = 0.01

    #GC_NO + GTP <-> GTP_GC_NO
    Reac254 = smodel.Reac('Reac254', vsys, lhs =[GC_NO, GTP], rhs = [GTP_GC_NO])
    Reac254.kcst = 0.735e6
    Reac255 = smodel.Reac('Reac255', vsys, lhs =[GTP_GC_NO], rhs = [GC_NO, GTP])
    Reac255.kcst = 29.4

    #GTP_GC_NO -> cGMP + GC_NO
    Reac256 = smodel.Reac('Reac256', vsys, lhs = [GTP_GC_NO], rhs = [cGMP,GC_NO])
    Reac256.kcst = 7.35

    #GC_NO -> GC
    Reac257 = smodel.Reac('Reac257', vsys, lhs = [GC_NO], rhs = [GC]) 
    Reac257.kcst = 0.673
    

    #cGMP + CaM3Ca_pPDE1 <-> cGMP_CaM3Ca_pPDE1 -> GMP + CaM3Ca_pPDE1
    Reac258 = smodel.Reac('Reac258', vsys, lhs = [cGMP,CaM3Ca_pPDE1], rhs = [cGMP_CaM3Ca_pPDE1])
    Reac258.kcst = 37.5e6
    Reac259 = smodel.Reac('Reac259', vsys, lhs = [cGMP_CaM3Ca_pPDE1], rhs = [cGMP,CaM3Ca_pPDE1])
    Reac259.kcst = 60
    Reac260 = smodel.Reac('Reac260', vsys, lhs = [cGMP_CaM3Ca_pPDE1], rhs = [GMP, CaM3Ca_pPDE1])
    Reac260.kcst = 15

    #cGMP + CaM3Ca_PDE1 <-> cGMP_CaM3Ca_PDE1 -> GMP + CaM3Ca_PDE1
    Reac261 = smodel.Reac('Reac261', vsys, lhs = [cGMP,CaM3Ca_PDE1], rhs = [cGMP_CaM3Ca_PDE1])
    Reac261.kcst = 37.5e6
    Reac262 = smodel.Reac('Reac262', vsys, lhs = [cGMP_CaM3Ca_PDE1], rhs = [cGMP,CaM3Ca_PDE1])
    Reac262.kcst = 60
    Reac263 = smodel.Reac('Reac263', vsys, lhs = [cGMP_CaM3Ca_PDE1], rhs = [GMP, CaM3Ca_PDE1])
    Reac263.kcst = 15 

    #cGMP + pPDE1 <-> cGMP_pPDE1 -> GMP + pPDE1
    Reac264 = smodel.Reac('Reac264', vsys, lhs = [cGMP,pPDE1], rhs = [cGMP_pPDE1])
    Reac264.kcst = 0.25e6
    Reac265 = smodel.Reac('Reac265', vsys, lhs = [cGMP_pPDE1], rhs = [cGMP,pPDE1])
    Reac265.kcst = 0.4 
    Reac266 = smodel.Reac('Reac266', vsys, lhs = [cGMP_pPDE1], rhs = [GMP, pPDE1])
    Reac266.kcst = 0.1

    #cGMP + PDE1 <-> cGMP_PDE1 -> GMP + PDE1 
    Reac267 = smodel.Reac('Reac267', vsys, lhs = [cGMP,PDE1], rhs = [cGMP_PDE1])
    Reac267.kcst = 0.25e6
    Reac268 = smodel.Reac('Reac268', vsys, lhs = [cGMP_PDE1], rhs = [cGMP,PDE1])
    Reac268.kcst = 0.4
    Reac269 = smodel.Reac('Reac269', vsys, lhs = [cGMP_PDE1], rhs = [GMP, PDE1])
    Reac269.kcst = 0.1

    #cGMP + PDE5 <-> cGMP_PDE5 -> GMP + PDE5 
    Reac270 = smodel.Reac('Reac270', vsys, lhs = [cGMP,act_PDE5], rhs = [cGMP_PDE5])
    Reac270.kcst = 7.5e6
    Reac271 = smodel.Reac('Reac271', vsys, lhs = [cGMP_PDE5], rhs = [cGMP,act_PDE5])
    Reac271.kcst = 12 
    Reac272 = smodel.Reac('Reac272', vsys, lhs = [cGMP_PDE5], rhs = [GMP, act_PDE5])
    Reac272.kcst = 3

    
    #pPDE1 -> PDE1 
    Reac273 = smodel.Reac('Reac273', vsys, lhs = [pPDE1], rhs = [PDE1])
    Reac273.kcst = 0.2

    #CaM3Ca_pPDE1 -> CaM3Ca_PDE1 
    Reac274 = smodel.Reac('Reac274', vsys, lhs = [CaM3Ca_pPDE1], rhs = [CaM3Ca_PDE1])
    Reac274.kcst = 0.2

    #PDE1  <-> PDE1_CaMKII -> pPDE1 
    Reac275 = smodel.Reac('Reac275', vsys, lhs = [PDE1,calc_3_1], rhs = [PDE1_CaMKII])
    Reac275.kcst = 0.90909090e6
    Reac276 = smodel.Reac('Reac276', vsys, lhs = [PDE1_CaMKII], rhs = [PDE1])
    Reac276.kcst = 8 
    Reac277 = smodel.Reac('Reac277', vsys, lhs = [PDE1_CaMKII], rhs = [pPDE1])
    Reac277.kcst = 2 

    #pPDE1 + CaN <-> pPDE1_CaN -> PDE1 + CaN
    Reac278 = smodel.Reac('Reac278', vsys, lhs = [pPDE1, CaM3CaCaN], rhs = [pPDE1_CaN])
    Reac278.kcst = 1.25e6
    Reac279 = smodel.Reac('Reac279', vsys, lhs = [pPDE1_CaN], rhs = [pPDE1, CaM3CaCaN])
    Reac279.kcst = 2 
    Reac280 = smodel.Reac('Reac280', vsys, lhs = [pPDE1_CaN], rhs = [PDE1, CaM3CaCaN])
    Reac280.kcst = 0.5 

    #CaM3Ca_PDE1 <-> CaM3Ca_PDE1_CaMKII -> CaM3Ca_pPDE1 
    Reac281 = smodel.Reac('Reac281', vsys, lhs = [CaM3Ca_PDE1,calc_3_1], rhs = [CaM3Ca_PDE1_CaMKII])
    Reac281.kcst = 0.90909090e6
    Reac282 = smodel.Reac('Reac282', vsys, lhs = [CaM3Ca_PDE1_CaMKII], rhs = [CaM3Ca_PDE1])
    Reac282.kcst = 8
    Reac283 = smodel.Reac('Reac283', vsys, lhs = [CaM3Ca_PDE1_CaMKII], rhs = [CaM3Ca_pPDE1])
    Reac283.kcst = 2

    #CaM3Ca_pPDE1 + CaN <-> CaM3Ca_pPDE1_CaN -> CaM3Ca_PDE1 + CaN
    Reac284 = smodel.Reac('Reac284', vsys, lhs = [CaM3Ca_pPDE1, CaM3CaCaN], rhs = [CaM3Ca_pPDE1_CaN])
    Reac284.kcst = 1.25e6
    Reac285 = smodel.Reac('Reac285', vsys, lhs = [CaM3Ca_pPDE1_CaN], rhs = [CaM3Ca_pPDE1, CaM3CaCaN])
    Reac285.kcst = 2 
    Reac286 = smodel.Reac('Reac286', vsys, lhs = [CaM3Ca_pPDE1_CaN], rhs = [CaM3Ca_PDE1, CaM3CaCaN])
    Reac286.kcst = 0.5


    #PDE1 + CaM3Ca <-> CaM3Ca_PDE1 
    Reac287 = smodel.Reac('Reac287', vsys, lhs = [PDE1,CaM3Ca], rhs = [CaM3Ca_PDE1])
    Reac287.kcst = 600e6
    Reac323 = smodel.Reac('Reac323', vsys, lhs = [CaM3Ca_PDE1], rhs = [PDE1,CaM3Ca])
    Reac323.kcst = 0.06 

    #pPDE1 + CaM3Ca <-> CaM3Ca_pPDE1 
    Reac288 = smodel.Reac('Reac288', vsys, lhs = [pPDE1,CaM3Ca], rhs = [CaM3Ca_pPDE1])
    Reac288.kcst = 600e6
    Reac324 = smodel.Reac('Reac324', vsys, lhs = [CaM3Ca_pPDE1], rhs = [pPDE1,CaM3Ca])
    Reac324.kcst = 0.36 

    #PP2A + pG <-> PP2A_pGsub
    Reac289 = smodel.Reac('Reac289', vsys, lhs = [PP2A,pG], rhs = [PP2A_pGsub])
    Reac289.kcst = 10e6
    Reac325 = smodel.Reac('Reac325', vsys, lhs = [PP2A_pGsub], rhs = [PP2A,pG])
    Reac325.kcst = 0.06

    #pG -> G_sub 
    Reac290 = smodel.Reac('Reac290', vsys, lhs = [pG], rhs = [G_sub])
    Reac290.kcst = 0.2

    #pG + PP2A <-> pG_PP2A -> G_sub + PP2A
    Reac291 = smodel.Reac('Reac291', vsys, lhs = [pG,PP2A], rhs = [pG_PP2A])
    Reac291.kcst = 2e6
    Reac292 = smodel.Reac('Reac292', vsys, lhs = [pG_PP2A], rhs = [pG,PP2A])
    Reac292.kcst = 8
    Reac293 = smodel.Reac('Reac293', vsys, lhs = [pG_PP2A], rhs = [G_sub, PP2A]) 
    Reac293.kcst = 2

    #pG + CaM3CaCaN <-> pG_CaM3CaCaN -> G_sub + CaM3CaCaN
    Reac294 = smodel.Reac('Reac294', vsys, lhs = [pG,CaM3CaCaN], rhs = [pG_CaM3CaCaN])
    Reac294.kcst = 1.5625e6
    Reac295 = smodel.Reac('Reac295', vsys, lhs = [pG_CaM3CaCaN], rhs = [pG,CaM3CaCaN])
    Reac295.kcst = 2
    Reac296 = smodel.Reac('Reac296', vsys, lhs = [pG_CaM3CaCaN], rhs = [G_sub, CaM3CaCaN]) 
    Reac296.kcst = 0.5 

    #G_sub + PKG_cGMP <-> G_sub_PKG -> pG + PKG
    Reac297 = smodel.Reac('Reac297', vsys, lhs = [G_sub,PKG_cGMP], rhs = [G_sub_PKG])
    Reac297.kcst = 50e6
    Reac298 = smodel.Reac('Reac298', vsys, lhs = [G_sub_PKG], rhs = [G_sub, PKG_cGMP])
    Reac298.kcst = 8
    Reac299 = smodel.Reac('Reac299', vsys, lhs = [G_sub_PKG], rhs = [pG, PKG_cGMP])
    Reac299.kcst = 2
    
    #PDE5 + cGMP + cGMP <-> act_PDE5
    Reac300 = smodel.Reac('Reac300', vsys, lhs= [PDE5,cGMP,cGMP], rhs = [act_PDE5])
    Reac300.kcst = 1e12
    Reac301 = smodel.Reac('Reac301', vsys, lhs = [act_PDE5], rhs = [PDE5, cGMP, cGMP])
    Reac301.kcst = 0.25 

    #PKG + cGMP + cGMP <-> PKG_cGMP
    Reac302 = smodel.Reac('Reac302', vsys, lhs= [PKG,cGMP,cGMP], rhs = [PKG_cGMP])
    Reac302.kcst = 2e12
    Reac303 = smodel.Reac('Reac303', vsys, lhs = [PKG_cGMP], rhs = [PKG, cGMP, cGMP])
    Reac303.kcst = 0.1

    #PP1_DARPP32 + C_actPKA <-> PP1_DARPP32_C_actPKA -> PP1_pDARPP32 + C_actPKA 
    Reac326 = smodel.Reac('Reac326', vsys, lhs = [PP1_DARPP32,C_actPKA], rhs = [PP1_DARPP32_C_actPKA])
    Reac326.kcst = 5.625e6
    Reac327 = smodel.Reac('Reac327', vsys, lhs = [PP1_DARPP32_C_actPKA], rhs = [PP1_DARPP32, C_actPKA])
    Reac327.kcst = 10.8
    Reac328 = smodel.Reac('Reac328', vsys, lhs = [PP1_DARPP32_C_actPKA], rhs = [PP1_pDARPP32,C_actPKA])
    Reac328.kcst = 2.7

    #PP1_pDARPP32 + CaM3CaCaN <-> PP1_pDARPP32_CaN -> PP1_DARPP32 + CaM3CaCaN 
    Reac329 = smodel.Reac('Reac329', vsys, lhs = [PP1_pDARPP32,CaM3CaCaN], rhs = [PP1_pDARPP32_CaN])
    Reac329.kcst = 1.5625e6
    Reac330 = smodel.Reac('Reac330', vsys, lhs = [PP1_pDARPP32_CaN], rhs = [PP1_pDARPP32, CaM3CaCaN])
    Reac330.kcst = 2.0
    Reac331 = smodel.Reac('Reac331', vsys, lhs = [PP1_pDARPP32_CaN], rhs = [PP1_DARPP32,CaM3CaCaN])
    Reac331.kcst = 0.5

    #PP1_pDARPP32 + PP2A <-> PP1_pDARPP32_PP2A -> PP1_DARPP32 + PP2A 
    Reac332 = smodel.Reac('Reac332', vsys, lhs = [PP1_pDARPP32,PP2A], rhs = [PP1_pDARPP32_PP2A])
    Reac332.kcst = 2e6
    Reac333 = smodel.Reac('Reac333', vsys, lhs = [PP1_pDARPP32_PP2A], rhs = [PP1_pDARPP32, PP2A])
    Reac333.kcst = 8.0
    Reac334 = smodel.Reac('Reac334', vsys, lhs = [PP1_pDARPP32_PP2A], rhs = [PP1_DARPP32,PP2A])
    Reac334.kcst = 2.0
    
    #DARPP32 + C_actPKA <-> DARPP32_C_actPKA -> pDARPP32 + C_actPKA 
    Reac335 = smodel.Reac('Reac335', vsys, lhs = [DARPP32,C_actPKA], rhs = [DARPP32_C_actPKA])
    Reac335.kcst = 5.625e6
    Reac336 = smodel.Reac('Reac336', vsys, lhs = [DARPP32_C_actPKA], rhs = [DARPP32, C_actPKA])
    Reac336.kcst = 10.8
    Reac337 = smodel.Reac('Reac337', vsys, lhs = [DARPP32_C_actPKA], rhs = [pDARPP32,C_actPKA])
    Reac337.kcst = 2.7

    #pDARPP32 + CaM3CaCaN <-> pDARPP32_CaN -> DARPP32 + CaM3CaCaN 
    Reac338 = smodel.Reac('Reac338', vsys, lhs = [pDARPP32,CaM3CaCaN], rhs = [pDARPP32_CaN])
    Reac338.kcst = 1.5625e6
    Reac339 = smodel.Reac('Reac339', vsys, lhs = [pDARPP32_CaN], rhs = [pDARPP32, CaM3CaCaN])
    Reac339.kcst = 2.0
    Reac340 = smodel.Reac('Reac340', vsys, lhs = [pDARPP32_CaN], rhs = [DARPP32,CaM3CaCaN])
    Reac340.kcst = 0.5

    #pDARPP32 + PP2A <-> pDARPP32_PP2A -> DARPP32 + PP2A 
    Reac341 = smodel.Reac('Reac341', vsys, lhs = [pDARPP32,PP2A], rhs = [pDARPP32_PP2A])
    Reac341.kcst = 2.0e6
    Reac342 = smodel.Reac('Reac342', vsys, lhs = [pDARPP32_PP2A], rhs = [pDARPP32, PP2A])
    Reac342.kcst = 8.0
    Reac343 = smodel.Reac('Reac343', vsys, lhs = [pDARPP32_PP2A], rhs = [DARPP32,PP2A])
    Reac343.kcst = 2.0
    
    #PP1 + DARPP32 <-> PP1_DARPP32 
    Reac344 = smodel.Reac('Reac344', vsys, lhs = [PP1, DARPP32], rhs = [ PP1_DARPP32])
    Reac344.kcst = 0.5e6
    Reac345 = smodel.Reac('Reac345', vsys, lhs = [PP1_DARPP32], rhs = [PP1, DARPP32])
    Reac345.kcst = 0.5

    #PP1 + pDARPP32 <-> PP1_pDARPP32 
    Reac346 = smodel.Reac('Reac346', vsys, lhs = [PP1, pDARPP32], rhs = [ PP1_pDARPP32])
    Reac346.kcst = 500e6
    Reac347 = smodel.Reac('Reac347', vsys, lhs = [PP1_pDARPP32], rhs = [PP1, pDARPP32])
    Reac347.kcst = 0.5   

    #R2C2_PKA + cAMP <-> cAMP_R2C2 
    Reac348 = smodel.Reac('Reac348', vsys, lhs = [R2C2_PKA,cAMP], rhs = [cAMP_R2C2])
    Reac348.kcst = 2e6
    Reac349 = smodel.Reac('Reac349', vsys, lhs = [cAMP_R2C2], rhs = [R2C2_PKA,cAMP])
    Reac349.kcst = 0.75

    #cAMP_R2C2 + cAMP <-> cAMP2_bb_R2C2 
    Reac350 = smodel.Reac('Reac350', vsys, lhs = [cAMP_R2C2,cAMP], rhs = [cAMP2_bb_R2C2])
    Reac350.kcst = 1e6
    Reac351 = smodel.Reac('Reac351', vsys, lhs = [cAMP2_bb_R2C2], rhs = [cAMP_R2C2,cAMP])
    Reac351.kcst = 1.5
    
    #cAMP_R2C2 + cAMP <-> cAMP2_ab_R2C2 
    Reac352 = smodel.Reac('Reac352', vsys, lhs = [cAMP_R2C2,cAMP], rhs = [cAMP2_ab_R2C2])
    Reac352.kcst = 10e6
    Reac353 = smodel.Reac('Reac353', vsys, lhs = [cAMP2_ab_R2C2], rhs = [cAMP_R2C2,cAMP])
    Reac353.kcst = 7.5
    
    #cAMP2_bb_R2C2 + cAMP <-> cAMP3_R2C2 
    Reac354 = smodel.Reac('Reac354', vsys, lhs = [cAMP2_bb_R2C2, cAMP], rhs = [cAMP3_R2C2])
    Reac354.kcst = 20e6
    Reac355 = smodel.Reac('Reac355', vsys, lhs = [cAMP3_R2C2], rhs = [cAMP2_bb_R2C2, cAMP])
    Reac355.kcst = 7.5 
    
    
    #cAMP2_ab_R2C2 + cAMP <-> cAMP3_R2C2 
    Reac356 = smodel.Reac('Reac356', vsys, lhs = [cAMP2_ab_R2C2, cAMP], rhs = [cAMP3_R2C2])
    Reac356.kcst = 1.0e6
    Reac357 = smodel.Reac('Reac357', vsys, lhs = [cAMP3_R2C2], rhs = [cAMP2_ab_R2C2, cAMP])
    Reac357.kcst = 0.75  

    #cAMP3_R2C2 + cAMP <-> cAMP4_R2C2 
    Reac358 = smodel.Reac('Reac358', vsys, lhs = [cAMP3_R2C2, cAMP], rhs = [cAMP4_R2C2])
    Reac358.kcst = 10e6
    Reac359 = smodel.Reac('Reac359', vsys, lhs = [cAMP4_R2C2], rhs = [cAMP3_R2C2,cAMP])
    Reac359.kcst = 15

    #cAMP2_ab_R2C2  <-> cAMP2_ab_R2C + C_actPKA
    Reac360 = smodel.Reac('Reac360', vsys, lhs = [cAMP2_ab_R2C2], rhs = [cAMP2_ab_R2C, C_actPKA])
    Reac360.kcst = 0.005
    Reac361 = smodel.Reac('Reac361', vsys, lhs = [cAMP2_ab_R2C, C_actPKA], rhs = [cAMP2_ab_R2C2])
    Reac361.kcst = 5e6

    #cAMP3_R2C2  <-> cAMP3_R2C + C_actPKA
    Reac362 = smodel.Reac('Reac362', vsys, lhs = [cAMP3_R2C2], rhs = [cAMP3_R2C, C_actPKA])
    Reac362.kcst = 0.005
    Reac363 = smodel.Reac('Reac363', vsys, lhs = [cAMP3_R2C, C_actPKA], rhs = [cAMP3_R2C2])
    Reac363.kcst = 5e6
    
    #cAMP4_R2C2  <-> cAMP4_R2C + C_actPKA
    Reac364 = smodel.Reac('Reac364', vsys, lhs = [cAMP4_R2C2], rhs = [cAMP4_R2C, C_actPKA])
    Reac364.kcst = 6
    Reac365 = smodel.Reac('Reac365', vsys, lhs = [cAMP4_R2C, C_actPKA], rhs = [cAMP4_R2C2])
    Reac365.kcst = 5e6
    
    #cAMP4_R2C  <-> cAMP4_R2 + C_actPKA
    Reac366 = smodel.Reac('Reac366', vsys, lhs = [cAMP4_R2C], rhs = [cAMP4_R2, C_actPKA])
    Reac366.kcst = 3
    Reac367 = smodel.Reac('Reac367', vsys, lhs = [cAMP4_R2, C_actPKA], rhs = [cAMP4_R2C])
    Reac367.kcst = 10e6

    #cAMP2_ab_R2C + cAMP <-> cAMP3_R2C  
    Reac368 = smodel.Reac('Reac368', vsys, lhs = [cAMP2_ab_R2C, cAMP], rhs = [cAMP3_R2C])
    Reac368.kcst = 1.0e6
    Reac369 = smodel.Reac('Reac369', vsys, lhs = [cAMP3_R2C], rhs = [cAMP2_ab_R2C, cAMP])
    Reac369.kcst =  0.75

    #cAMP3_R2C + cAMP <-> cAMP4_R2C 
    Reac370 = smodel.Reac('Reac370', vsys, lhs = [cAMP3_R2C, cAMP], rhs = [cAMP4_R2C])
    Reac370.kcst = 10e6
    Reac371 = smodel.Reac('Reac371', vsys, lhs = [cAMP4_R2C], rhs = [cAMP3_R2C,cAMP])
    Reac371.kcst = 7.5

    #cAMP + PDE4 <-> cAMP_PDE4 <-> AMP + PDE4
    Reac372 = smodel.Reac('Reac372',vsys, lhs = [cAMP,PDE4], rhs = [cAMP_PDE4])
    Reac372.kcst = 0.125e6
    Reac373 = smodel.Reac('Reac373',vsys, lhs = [cAMP_PDE4], rhs = [cAMP,PDE4])
    Reac373.kcst = 0.2
    Reac374 = smodel.Reac('Reac374',vsys, lhs = [cAMP_PDE4], rhs = [AMP,PDE4])
    Reac374.kcst = 0.05

    #cAMP + CaM3Ca_pPDE1 <-> cAMP_CaM3Ca_pPDE1 <-> AMP + CaM3Ca_pPDE1
    Reac375 = smodel.Reac('Reac375',vsys, lhs = [cAMP,CaM3Ca_pPDE1], rhs = [cAMP_CaM3Ca_pPDE1])
    Reac375.kcst = 2.0833e6
    Reac376 = smodel.Reac('Reac376',vsys, lhs = [cAMP_CaM3Ca_pPDE1], rhs = [cAMP,CaM3Ca_pPDE1])
    Reac376.kcst = 20
    Reac377 = smodel.Reac('Reac377',vsys, lhs = [cAMP_CaM3Ca_pPDE1], rhs = [AMP,CaM3Ca_pPDE1])
    Reac377.kcst = 5

    #cAMP + CaM3Ca_PDE1 <-> cAMP_CaM3Ca_PDE1 <-> AMP + CaM3Ca_PDE1
    Reac378 = smodel.Reac('Reac378',vsys, lhs = [cAMP,CaM3Ca_PDE1], rhs = [cAMP_CaM3Ca_PDE1])
    Reac378.kcst = 2.0833e6
    Reac379 = smodel.Reac('Reac379',vsys, lhs = [cAMP_CaM3Ca_PDE1], rhs = [cAMP,CaM3Ca_PDE1])
    Reac379.kcst = 20
    Reac380 = smodel.Reac('Reac380',vsys, lhs = [cAMP_CaM3Ca_PDE1], rhs = [AMP,CaM3Ca_PDE1])
    Reac380.kcst = 5

    #cAMP + pPDE1 <-> cAMP_pPDE1 <-> AMP + pPDE1
    Reac381 = smodel.Reac('Reac381',vsys, lhs = [cAMP,pPDE1], rhs = [cAMP_pPDE1])
    Reac381.kcst = 0.0416e6
    Reac382 = smodel.Reac('Reac382',vsys, lhs = [cAMP_pPDE1], rhs = [cAMP,pPDE1])
    Reac382.kcst = 0.4
    Reac383 = smodel.Reac('Reac383',vsys, lhs = [cAMP_pPDE1], rhs = [AMP,pPDE1])
    Reac383.kcst = 0.1

    #cAMP + PDE1 <-> cAMP_PDE1 <-> AMP + PDE1
    Reac384 = smodel.Reac('Reac384',vsys, lhs = [cAMP,PDE1], rhs = [cAMP_PDE1])
    Reac384.kcst = 0.0416e6
    Reac385 = smodel.Reac('Reac385',vsys, lhs = [cAMP_PDE1], rhs = [cAMP,PDE1])
    Reac385.kcst = 0.4
    Reac386 = smodel.Reac('Reac386',vsys, lhs = [cAMP_PDE1], rhs = [AMP,PDE1])
    Reac386.kcst = 0.1

    return mdl

########################################################################

# Geometric properties of the model: To change the size of the model, 
# all volumetric compartments must be altered by the same ratio
# and all the areas must be scaled considering a spherical shape.
# Alterations in the size of the compartments will change automatically the population
# of species given in concentration (initial condition), but the species 
# given in number of molecules must be altered manually by the same ratio
# to keep the balance among all the components of the model. 

def gen_geom():    
    g = swm.Geom()
    c = swm.Comp('vsys', g)
    c.addVolsys('vsys')
    c.vol = 0.08e-18
    
    extra = swm.Comp('extra', g)
    extra.addVolsys('extra')
    extra.vol = 1.87e-22
    
    s = swm.Patch('memb', g, icomp = c, ocomp = extra)
    s.addSurfsys('memb')
    s.area = 1.02e-12
    
    cytER = swm.Comp('cytER', g)
    cytER.addVolsys('cytER')
    cytER.vol = 0.017e-18
    
    ERs = swm.Patch('ERmemb', g, icomp = cytER, ocomp = c)
    ERs.addSurfsys('ERmemb')
    ERs.area = 0.32e-12
    
    return g

######################################################################

def run_gauss_mean():
    rng=srng.create('mt19937',512)
    m=gen_model() 
    g=gen_geom() 
    tpnts=np.arange(0.0,INT,DT)
    ntpnts=tpnts.shape[0]
    
    # initialize arrays for storage at each time point and at each run.
    Ca = numpy.zeros((NITER, ntpnts))
    
    PMCA = numpy.zeros((NITER, ntpnts))
    Ca1PMCA = numpy.zeros((NITER, ntpnts))
    NCX = numpy.zeros((NITER, ntpnts))
    Ca1NCX = numpy.zeros((NITER, ntpnts))
    Ca2NCX = numpy.zeros((NITER, ntpnts))
    SERCA = numpy.zeros((NITER, ntpnts))
    Ca1SERCA = numpy.zeros((NITER, ntpnts))
    Ca2SERCA = numpy.zeros((NITER, ntpnts))
    CBf = numpy.zeros((NITER, ntpnts))
    CaCBf = numpy.zeros((NITER, ntpnts))
    Ca2CBf = numpy.zeros((NITER, ntpnts))
    CBs = numpy.zeros((NITER, ntpnts))
    CaCBs = numpy.zeros((NITER, ntpnts))
    Ca2CBs = numpy.zeros((NITER, ntpnts))
    PV = numpy.zeros((NITER, ntpnts))
    CaPV = numpy.zeros((NITER, ntpnts))
    MgPV = numpy.zeros((NITER, ntpnts))
    Ca2PV = numpy.zeros((NITER, ntpnts))
    Mg2PV = numpy.zeros((NITER, ntpnts))
    PP2A = numpy.zeros((NITER, ntpnts))
    PKC = numpy.zeros((NITER, ntpnts))
    Ca1PKC = numpy.zeros((NITER, ntpnts))
    Ca3PKC = numpy.zeros((NITER, ntpnts))
    AAPKC = numpy.zeros((NITER, ntpnts))
    AACa1PKC = numpy.zeros((NITER, ntpnts))
    AACa3PKC = numpy.zeros((NITER, ntpnts))
    PKCstar = numpy.zeros((NITER, ntpnts))
    PKCstar2 = numpy.zeros((NITER, ntpnts))
    PKCstar4 = numpy.zeros((NITER, ntpnts))
    PKCstar3 = numpy.zeros((NITER, ntpnts))
    RKIPstarRP = numpy.zeros((NITER, ntpnts))
    RafRKIPPKCstar = numpy.zeros((NITER, ntpnts))
    RafRKIPPKCstar2 = numpy.zeros((NITER, ntpnts))
    RafRKIPPKCstar3 = numpy.zeros((NITER, ntpnts))
    RafRKIPPKCstar4 = numpy.zeros((NITER, ntpnts))
    RafRKIP = numpy.zeros((NITER, ntpnts))
    MEKRKIPPKCstar = numpy.zeros((NITER, ntpnts))
    MEKRKIPPKCstar2 = numpy.zeros((NITER, ntpnts))
    MEKRKIPPKCstar3 = numpy.zeros((NITER, ntpnts))
    MEKRKIPPKCstar4 = numpy.zeros((NITER, ntpnts))
    MEKRKIP = numpy.zeros((NITER, ntpnts))
    Raf = numpy.zeros((NITER, ntpnts))
    RKIPstar = numpy.zeros((NITER, ntpnts))
    Rafstar = numpy.zeros((NITER, ntpnts))
    PP5Rafstar = numpy.zeros((NITER, ntpnts))
    PP5 = numpy.zeros((NITER, ntpnts))
    MEK = numpy.zeros((NITER, ntpnts))
    RafstarMEK = numpy.zeros((NITER, ntpnts))
    MEKp = numpy.zeros((NITER, ntpnts))
    PP2AMEKp = numpy.zeros((NITER, ntpnts))
    RafstarMEKp = numpy.zeros((NITER, ntpnts))
    MEKstar = numpy.zeros((NITER, ntpnts))
    PP2AMEKstar = numpy.zeros((NITER, ntpnts))
    ERK = numpy.zeros((NITER, ntpnts))
    MEKstarERK = numpy.zeros((NITER, ntpnts))
    ERKp = numpy.zeros((NITER, ntpnts))
    MKP = numpy.zeros((NITER, ntpnts))
    MKPERKp = numpy.zeros((NITER, ntpnts))
    MEKstarERKp = numpy.zeros((NITER, ntpnts))
    ERKstar = numpy.zeros((NITER, ntpnts))
    MKPERKstar = numpy.zeros((NITER, ntpnts))
    Ca1PLA2 = numpy.zeros((NITER, ntpnts))
    Ca2PLA2 = numpy.zeros((NITER, ntpnts))
    PLA2 = numpy.zeros((NITER, ntpnts))
    PLA2memb = numpy.zeros((NITER, ntpnts))
    Ca1PLA2memb = numpy.zeros((NITER, ntpnts))
    PLA2star1 = numpy.zeros((NITER, ntpnts))
    ERKstarPLA2 = numpy.zeros((NITER, ntpnts))
    PLA2star2 = numpy.zeros((NITER, ntpnts))
    AA = numpy.zeros((NITER, ntpnts))
    Ca1PLA2star2 = numpy.zeros((NITER, ntpnts))
    Ca2PLA2star2 = numpy.zeros((NITER, ntpnts))
    PLA2star2memb = numpy.zeros((NITER, ntpnts))
    Ca1PLA2star2memb = numpy.zeros((NITER, ntpnts))
    Ca2PLA2star2memb = numpy.zeros((NITER, ntpnts))
    PLA2star1APC = numpy.zeros((NITER, ntpnts))
    ERKstarCa1PLA2 = numpy.zeros((NITER, ntpnts))
    ERKstarCa2PLA2 = numpy.zeros((NITER, ntpnts))
    PP2ACa1PLA2star2 = numpy.zeros((NITER, ntpnts))
    PP2ACa2PLA2star2 = numpy.zeros((NITER, ntpnts))
    PP1Ca1PLA2star2 = numpy.zeros((NITER, ntpnts))
    PP1Ca2PLA2star2 = numpy.zeros((NITER, ntpnts))
    PLA2star2membAPC = numpy.zeros((NITER, ntpnts))
    Ca1PLA2star2membAPC = numpy.zeros((NITER, ntpnts))
    Ca2PLA2star2membAPC = numpy.zeros((NITER, ntpnts))
    PP1PLA2star2 = numpy.zeros((NITER, ntpnts))
    PP1 = numpy.zeros((NITER, ntpnts)) 
    PP2APLA2star2 = numpy.zeros((NITER, ntpnts))
    
    PKCstarAMPAR = numpy.zeros((NITER, ntpnts))
    PKCstar2AMPAR = numpy.zeros((NITER, ntpnts))
    PKCstar4AMPAR = numpy.zeros((NITER, ntpnts))
    PKCstar3AMPAR = numpy.zeros((NITER, ntpnts))
    AMPAR = numpy.zeros((NITER, ntpnts))
    AMPAR_P = numpy.zeros((NITER, ntpnts))
    PP2AAMPAR_P = numpy.zeros((NITER, ntpnts))
    AMPARextra = numpy.zeros((NITER, ntpnts))
    AMPARextra_P = numpy.zeros((NITER, ntpnts))
    PP2AAMPARextra_P = numpy.zeros((NITER, ntpnts))
    GRIP = numpy.zeros((NITER, ntpnts))
    GRIPAMPAR_P = numpy.zeros((NITER, ntpnts))
    GRIPAMPAR = numpy.zeros((NITER, ntpnts))
    AMPARdend = numpy.zeros((NITER, ntpnts))
    AMPARdend_P = numpy.zeros((NITER, ntpnts))
    PP2AAMPARdend_P = numpy.zeros((NITER, ntpnts))
    AMPARcyt = numpy.zeros((NITER, ntpnts))
    AMPARcyt_P = numpy.zeros((NITER, ntpnts))
    PP2AAMPARcyt_P = numpy.zeros((NITER, ntpnts))
    CaM = numpy.zeros((NITER, ntpnts))
    CaM1Ca = numpy.zeros((NITER, ntpnts))
    CaM2Ca = numpy.zeros((NITER, ntpnts))
    CaM3Ca = numpy.zeros((NITER, ntpnts))
    CaN = numpy.zeros((NITER, ntpnts))
    CaMKII = numpy.zeros((NITER, ntpnts))
    CaM3Ca_CaMKII = numpy.zeros((NITER, ntpnts))
    CaM3Ca_pT286287 = numpy.zeros((NITER, ntpnts))
    pT286287 = numpy.zeros((NITER, ntpnts))
    pT286287_pT308306 = numpy.zeros((NITER, ntpnts))
    pT308306 = numpy.zeros((NITER, ntpnts))

    GC = numpy.zeros((NITER, ntpnts))
    NO = numpy.zeros((NITER, ntpnts))
    GC_NO = numpy.zeros((NITER, ntpnts))
    GTP = numpy.zeros((NITER, ntpnts))
    GTP_GC_NO = numpy.zeros((NITER, ntpnts))
    cGMP = numpy.zeros((NITER, ntpnts))
    GMP = numpy.zeros((NITER,ntpnts))
    PDE1 = numpy.zeros((NITER, ntpnts))
    pPDE1 = numpy.zeros((NITER, ntpnts))
    PDE5 = numpy.zeros((NITER, ntpnts))
    PDE5_cGMP = numpy.zeros((NITER, ntpnts))
    PKG = numpy.zeros((NITER, ntpnts))
    PKG_cGMP = numpy.zeros((NITER, ntpnts))
    CaM3Ca_PDE1 = numpy.zeros((NITER, ntpnts))
    CaM3Ca_pPDE1 = numpy.zeros((NITER, ntpnts))
    GMP = numpy.zeros((NITER, ntpnts))
    PP2A_pGsub = numpy.zeros((NITER, ntpnts))
    pG = numpy.zeros((NITER, ntpnts))
    G_sub = numpy.zeros((NITER, ntpnts))
 
    CaM3Ca_pT286287_PP1 = numpy.zeros((NITER, ntpnts))
    CaM3Ca_pT286287_PP2A = numpy.zeros((NITER, ntpnts))
    pT286287_pT308306_PP1 = numpy.zeros((NITER, ntpnts))
    pT286287_pT308306_PP2A = numpy.zeros((NITER, ntpnts))
    pT286287_PP1 = numpy.zeros((NITER, ntpnts))
    pT286287_PP2A = numpy.zeros((NITER, ntpnts))
    pT286287_pT308306_PP1_2 = numpy.zeros((NITER, ntpnts))
    pT286287_pT308306_PP2A_2 = numpy.zeros((NITER, ntpnts))
    pT308306_PP1 = numpy.zeros((NITER, ntpnts))
    pT308306_PP2A = numpy.zeros((NITER, ntpnts))
    cGMP_CaM3Ca_pPDE1 = numpy.zeros((NITER, ntpnts))
    cGMP_CaM3Ca_PDE1 = numpy.zeros((NITER, ntpnts))
    cGMP_PDE1 = numpy.zeros((NITER, ntpnts))
    cGMP_pPDE1 = numpy.zeros((NITER, ntpnts))
    PDE1_CaMKII = numpy.zeros((NITER, ntpnts))
    pPDE1_CaN = numpy.zeros((NITER, ntpnts))    
    CaM3Ca_PDE1_CaMKII = numpy.zeros((NITER, ntpnts))
    CaM3Ca_pPDE1_CaN = numpy.zeros((NITER, ntpnts))
    pG_PP2A = numpy.zeros((NITER, ntpnts))
    pG_CaN = numpy.zeros((NITER, ntpnts))
    G_sub_PKG = numpy.zeros((NITER, ntpnts))
    pDARPP32_PP2A = numpy.zeros((NITER, ntpnts))
    PP1_pDARPP32 = numpy.zeros((NITER, ntpnts))
    PP1_DARPP32 = numpy.zeros((NITER, ntpnts))
    DARPP32 = numpy.zeros((NITER, ntpnts))
    pDARPP32 = numpy.zeros((NITER, ntpnts))
    R2C2_PKA = numpy.zeros((NITER, ntpnts))
    cAMP_R2C2 = numpy.zeros((NITER, ntpnts))
    cAMP2_bb_R2C2 = numpy.zeros((NITER, ntpnts))
    cAMP2_ab_R2C2 = numpy.zeros((NITER, ntpnts))
    cAMP2_ab_R2C = numpy.zeros((NITER, ntpnts))
    cAMP3_R2C2 = numpy.zeros((NITER, ntpnts))
    cAMP3_R2C = numpy.zeros((NITER, ntpnts))
    cAMP4_R2C2 = numpy.zeros((NITER, ntpnts))
    cAMP4_R2C = numpy.zeros((NITER, ntpnts))
    cAMP4_R2 = numpy.zeros((NITER, ntpnts))
    C_actPKA = numpy.zeros((NITER, ntpnts))
    cAMP = numpy.zeros((NITER, ntpnts))
    AMP = numpy.zeros((NITER, ntpnts))
    PDE4 = numpy.zeros((NITER, ntpnts))
    cAMP_PDE4 = numpy.zeros((NITER, ntpnts)) 
    cAMP_PDE1 = numpy.zeros((NITER, ntpnts))
    cAMP_pPDE1 = numpy.zeros((NITER, ntpnts))
    cAMP_CaM3Ca_PDE1 = numpy.zeros((NITER, ntpnts))
    cAMP_CaM3Ca_pPDE1  = numpy.zeros((NITER, ntpnts))
    PP1_pDARPP32_PP2A  = numpy.zeros((NITER, ntpnts))
    CaM3CaCaN = numpy.zeros((NITER, ntpnts))
    calc_3_1 = numpy.zeros((NITER, ntpnts))
    

    pG_CaM3CaCaN = numpy.zeros((NITER, ntpnts))
    totPKC = numpy.zeros((NITER, ntpnts))
    actCaMKII = numpy.zeros((NITER, ntpnts))
    GMP = numpy.zeros((NITER, ntpnts))
    pPDE1 = numpy.zeros((NITER, ntpnts))
    act_PDE5 = numpy.zeros((NITER, ntpnts))

    ica=gaussian_ica(tpnts)
    
    sim = swmdirect.Wmdirect(m, g, rng)
    
    
    for j in arange(NITER): 
        print "Run number {0}".format(j)
        rng.initialize(int(idx)*100) 
        sim.reset()
        
        # initial conditions
        sim.setCompConc('vsys', 'Ca', 0.045e-6)
        sim.setCompConc('vsys', 'CBf', 37.775e-6)
        sim.setCompConc('vsys', 'CaCBf', 2.1e-6)
        sim.setCompConc('vsys', 'Ca2CBf', 0.125e-6)
        sim.setCompConc('vsys', 'CBs', 36.25e-6)
        sim.setCompConc('vsys', 'CaCBs', 3.4e-6)
        sim.setCompConc('vsys', 'Ca2CBs', 0.125e-6)
        sim.setCompConc('vsys', 'PV', 1.15e-6)
        sim.setCompConc('vsys', 'CaPV', 8.4e-6)
        sim.setCompConc('vsys', 'MgPV', 30.45e-6)

        #sim.setCompCount('vsys', 'PKC',72) 
        sim.setCompCount('vsys', 'PKC', int(pkc_number))
        #sim.setCompConc('vsys','PKC',2e-6)
        
        #sim.setCompConc('vsys', 'Raf',0.2e-6)
        sim.setCompCount('vsys', 'Raf',int(raf_number))
        #sim.setCompConc('vsys','Raf',0.2e-6)
        
        sim.setCompConc('vsys', 'RKIP', 1.0e-6)
        
        sim.setCompConc('vsys', 'MEK',1.5e-6) 
        #sim.setCompConc('vsys','MEK',0.4e-6)

        sim.setCompConc('vsys', 'RP' ,3e-6)
        #sim.setCompConc('vsys','RP',1e-6)
        
        sim.setCompConc('vsys', 'ERK',1.0e-6)
        #sim.setCompConc('vsys','ERK',0.4e-6)
        
        sim.setCompConc('vsys', 'MKP',0.26e-6) 
        #sim.setCompConc('vsys','MKP',0.005e-6)
        
        sim.setCompConc('vsys', 'PP5', 1.0e-6) 
        
        #sim.setCompConc('vsys', 'PP2A', 1.5e-6)
        sim.setCompConc('vsys', 'PP2A', float(pp2a_input)*1e-7)


        #sim.setCompConc('vsys', 'PLA2',0.4e-6)
        sim.setCompConc('vsys', 'PLA2',float(pla2_conc)*1.0e-6)
        
        sim.setCompCount('vsys', 'PP1', 30)
        #sim.setCompConc('vsys','PP1',0.4e-6)
        sim.setPatchCount('memb', 'PMCA',10)
        sim.setPatchCount('memb', 'NCX',3)
        sim.setPatchCount('ERmemb', 'SERCA', 100)
        sim.setCompConc('cytER', 'Ca', 150e-6)
        sim.setCompClamped('cytER', 'Ca', True) # clamped means the conc won't change as simulation runs.
        sim.setPatchCount('memb', 'AMPAR', 3) 
        sim.setPatchCount('memb', 'AMPARextra', 16) 
        sim.setPatchCount('memb', 'GRIP', 22) 
        sim.setPatchCount('memb', 'GRIPAMPAR', 119) 
        sim.setPatchCount('memb', 'AMPARdend', 1600)

        sim.setCompConc('vsys','NO',float(no_input)*1e-8)
        #sim.setCompConc('vsys','NO',float(no_input)*1e-4)

        sim.setCompClamped('vsys','NO',True)

        sim.setCompConc('vsys','CaMKII',float(Kin)*1e-6)
        sim.setCompConc('vsys','CaM',60e-6)
        sim.setCompConc('vsys','CaN',10e-6)
    
    
    
        sim.setCompConc('vsys','DARPP32',0.7e-6)
        sim.setCompConc('vsys','R2C2_PKA',0.25e-6)
    
    
    
        sim.setCompConc('vsys','PDE5',0.6e-6)
        sim.setCompConc('vsys','PDE1',1.6e-6)
        #sim.setCompConc('vsys','PDE1',0.6e-6)
        sim.setCompConc('vsys','PDE4',0.6e-6)
        #sim.setCompConc('vsys','GC',0.02e-6)
        sim.setCompConc('vsys','GC',0.04e-6)

        sim.setCompConc('vsys','PKG',0.1e-6)
    
        sim.setCompConc('vsys','G_sub',0.7e-6)
 
        sim.setCompConc('vsys','cAMP', 0.15e-6)
        #sim.setCompClamped('vsys','cAMP',True)

        sim.setCompConc('vsys','AMP',100e-6)
        sim.setCompClamped('vsys','AMP',True)

        sim.setCompConc('vsys','GTP',100e-6)
        sim.setCompClamped('vsys','GTP',True)
        sim.setCompConc('vsys','GMP', 0.1e-6)
        sim.setCompClamped('vsys','GMP',True)
        sim.setCompConc('vsys','cGMP', 0.02e-6)
        #sim.setCompConc('vsys','cGMP', 0.04e-6)
        
        for i in range(ntpnts):
            sim.setCompConc('vsys','calc_3_1', sim.getCompConc('vsys','CaM3Ca_pT286287') + sim.getCompConc('vsys','pT286287') + sim.getCompConc('vsys','CaM3Ca_CaMKII') + sim.getCompConc('vsys','pT286287_pT308306'))
            calc_3_4 =  sim.getCompConc('vsys','calc_3_1') + sim.getCompConc('vsys','CaMKII') + sim.getCompConc('vsys','pT308306') + sim.getCompConc('vsys','pT308306_PP1') + sim.getCompConc('vsys','pT286287_PP1') + sim.getCompConc('vsys','pT286287_pT308306_PP2A_2') + sim.getCompConc('vsys','pT286287_pT308306_PP2A') + sim.getCompConc('vsys','CaM3Ca_pT286287_PP1') + sim.getCompConc('vsys','CaM3Ca_pT286287_PP2A') + sim.getCompConc('vsys','pT286287_PP2A') + sim.getCompConc('vsys','pT286287_pT308306_PP1') + sim.getCompConc('vsys','pT286287_pT308306_PP1_2') + sim.getCompConc('vsys','pT308306_PP2A')
            sim.setCompConc('vsys','calc_3_3', sim.getCompConc('vsys','calc_3_1')/calc_3_4)

            if i==30000:
                raf_count = sim.getCompCount('vsys', 'Raf')
                raf_count+=int(raf_change)
                if raf_count >= 0: sim.setCompCount('vsys', 'Raf', raf_count)
                if raf_count < 0: sim.setCompCount('vsys', 'Raf', 0)

            #if(i==time): rng.initialize(int(idx)*100)    
            sim.run(tpnts[i]) 
            print "percent done",(tpnts[i]/INT*100) 
            #print sim.getCompConc('vsys','NO'), sim.getCompConc('vsys','PP2A')
            Ca[j,i] = sim.getCompConc('vsys', 'Ca')
            
            CBf[j,i] = sim.getCompConc('vsys', 'CBf')
            CaCBf[j,i] = sim.getCompConc('vsys', 'CaCBf')
            Ca2CBf[j,i] = sim.getCompConc('vsys', 'Ca2CBf')
            CaCBs[j,i] = sim.getCompConc('vsys', 'CaCBs')
            Ca2CBs[j,i] = sim.getCompConc('vsys', 'Ca2CBs')
            PV[j,i] = sim.getCompConc('vsys', 'PV')
            CaPV[j,i] = sim.getCompConc('vsys', 'CaPV')
            MgPV[j,i] = sim.getCompConc('vsys', 'MgPV')
            Ca2PV[j,i] = sim.getCompConc('vsys', 'Ca2PV')
            Mg2PV[j,i] = sim.getCompConc('vsys', 'Mg2PV')
            PP2A[j,i] = sim.getCompCount('vsys', 'PP2A')
            PP5[j,i] = sim.getCompCount('vsys', 'PP5')
            PKC[j,i] = sim.getCompCount('vsys', 'PKC')
            Ca3PKC[j,i] = sim.getCompCount('vsys', 'Ca3PKC')
            Ca1PKC[j,i] = sim.getCompCount('vsys', 'Ca1PKC')
            AAPKC[j,i] = sim.getCompCount('vsys', 'AAPKC')
            AACa1PKC[j,i] = sim.getCompCount('vsys', 'AACa1PKC')
            AACa3PKC[j,i] = sim.getCompCount('vsys', 'AACa3PKC')
            PKCstar[j,i] = sim.getPatchCount('memb', 'PKCstar')
            PKCstar2[j,i] = sim.getPatchCount('memb', 'PKCstar2')
            PKCstar3[j,i] = sim.getPatchCount('memb', 'PKCstar3')
            PKCstar4[j,i] = sim.getPatchCount('memb', 'PKCstar4')
            RafRKIP[j,i] = sim.getCompConc('vsys', 'RafRKIP')
            RafRKIPPKCstar[j,i] = sim.getPatchCount('memb', 'RafRKIPPKCstar')
            RafRKIPPKCstar2[j,i] = sim.getPatchCount('memb', 'RafRKIPPKCstar2')
            RafRKIPPKCstar3[j,i] = sim.getPatchCount('memb', 'RafRKIPPKCstar3')
            RafRKIPPKCstar4[j,i] = sim.getPatchCount('memb', 'RafRKIPPKCstar4')
            
            MEKRKIP[j,i] = sim.getCompConc('vsys', 'MEKRKIP')
            MEKRKIPPKCstar[j,i] = sim.getPatchCount('memb', 'MEKRKIPPKCstar')
            MEKRKIPPKCstar2[j,i] = sim.getPatchCount('memb', 'MEKRKIPPKCstar2')
            MEKRKIPPKCstar3[j,i] = sim.getPatchCount('memb', 'MEKRKIPPKCstar3')
            MEKRKIPPKCstar4[j,i] = sim.getPatchCount('memb', 'MEKRKIPPKCstar4')
            
            RKIPstar[j,i] = sim.getCompCount('vsys', 'RKIPstar')
            RKIPstarRP[j,i] = sim.getCompCount('vsys', 'RKIPstarRP')
            Raf[j,i] = sim.getCompCount('vsys', 'Raf')
            Rafstar[j,i] = sim.getCompCount('vsys', 'Rafstar')
            PP5Rafstar[j,i] = sim.getCompCount('vsys', 'PP5Rafstar')
            MEK[j,i] = sim.getCompCount('vsys', 'MEK')
            RafstarMEK[j,i] = sim.getCompCount('vsys', 'RafstarMEK')
            MEKp[j,i] = sim.getCompCount('vsys', 'MEKp')
            PP2AMEKp[j,i] = sim.getCompCount('vsys', 'PP2AMEKp')
            RafstarMEKp[j,i] = sim.getCompCount('vsys', 'RafstarMEKp')
            MEKstar[j,i] = sim.getCompCount('vsys', 'MEKstar')
            ERK[j,i] = sim.getCompCount('vsys', 'ERK')
            MEKstarERK[j,i] = sim.getCompCount('vsys', 'MEKstarERK')
            ERKp[j,i] = sim.getCompCount('vsys', 'ERKp')
            MKP[j,i] = sim.getCompCount('vsys', 'MKP')
            MKPERKp[j,i] = sim.getCompCount('vsys', 'MKPERKp')
            MEKstarERKp[j,i] = sim.getCompCount('vsys', 'MEKstarERKp')
            ERKstar[j,i] = sim.getCompCount('vsys', 'ERKstar')
            MKPERKstar[j,i] = sim.getCompCount('vsys', 'MKPERKstar')
            PP2A[j,i] = sim.getCompConc('vsys', 'PP2A')
            PLA2[j,i] = sim.getCompCount('vsys', 'PLA2')
            Ca1PLA2[j,i] = sim.getCompCount('vsys', 'Ca1PLA2')
            Ca2PLA2[j,i] = sim.getCompCount('vsys', 'Ca2PLA2')
            PLA2memb[j,i] = sim.getPatchCount('memb', 'PLA2memb')
            Ca1PLA2memb[j,i] = sim.getPatchCount('memb', 'Ca1PLA2memb')
            PLA2star1[j,i] = sim.getPatchCount('memb', 'PLA2star1')
            ERKstarPLA2[j,i] = sim.getCompCount('vsys', 'ERKstarPLA2')
            PLA2star2[j,i] = sim.getCompCount('vsys', 'PLA2star2')
            Ca1PLA2star2[j,i] = sim.getCompCount('vsys', 'Ca1PLA2star2')
            Ca2PLA2star2[j,i] = sim.getCompCount('vsys', 'Ca2PLA2star2')
            PLA2star2memb[j,i] = sim.getPatchCount('memb', 'PLA2star2memb')
            Ca1PLA2star2memb[j,i] = sim.getPatchCount('memb', 'Ca1PLA2star2memb')
            Ca2PLA2star2memb[j,i] = sim.getPatchCount('memb', 'Ca2PLA2star2memb')  
            AA[j,i] = sim.getCompConc('vsys', 'AA')
            PP2APLA2star2[j,i] = sim.getCompCount('vsys', 'PP2APLA2star2')
            PP1[j,i] = sim.getCompConc('vsys','PP1')
            PP1PLA2star2[j,i] = sim.getCompCount('vsys', 'PP1PLA2star2')
            PLA2star1APC[j,i] = sim.getPatchCount('memb', 'PLA2star1APC')
            ERKstarCa1PLA2[j,i] = sim.getCompConc('vsys', 'ERKstarCa1PLA2')
            ERKstarCa2PLA2[j,i] = sim.getCompConc('vsys', 'ERKstarCa2PLA2')             
            PP2ACa1PLA2star2[j,i] = sim.getCompConc('vsys', 'PP2ACa1PLA2star2')
            PP2ACa2PLA2star2[j,i] = sim.getCompConc('vsys', 'PP2ACa2PLA2star2')
            PP1Ca1PLA2star2[j,i] = sim.getCompConc('vsys', 'PP1Ca1PLA2star2')
            PP1Ca2PLA2star2[j,i] = sim.getCompConc('vsys', 'PP1Ca2PLA2star2')
            PLA2star2membAPC[j,i] = sim.getPatchCount('memb', 'PLA2star2membAPC')
            Ca1PLA2star2membAPC[j,i] = sim.getPatchCount('memb', 'Ca1PLA2star2membAPC')
            Ca2PLA2star2membAPC[j,i] = sim.getPatchCount('memb', 'Ca2PLA2star2membAPC')
            Ca1PMCA[j,i] = sim.getPatchCount('memb', 'Ca1PMCA')
            PMCA[j,i] = sim.getPatchCount('memb', 'PMCA')
            NCX[j,i] = sim.getPatchCount('memb', 'NCX')
            Ca1NCX[j,i] = sim.getPatchCount('memb', 'Ca1NCX')
            Ca2NCX[j,i] = sim.getPatchCount('memb', 'Ca2NCX')
            SERCA[j,i] = sim.getPatchCount('ERmemb', 'SERCA')
            Ca1SERCA[j,i] = sim.getPatchCount('ERmemb', 'Ca1SERCA')
            Ca2SERCA[j,i] = sim.getPatchCount('ERmemb', 'Ca2SERCA')
            PP1PLA2star2[j,i] = sim.getCompConc('vsys', 'PP1PLA2star2')
            
            AMPAR[j,i] = sim.getPatchCount('memb', 'AMPAR')  
            AMPAR_P[j,i] = sim.getPatchCount('memb', 'AMPAR_P') 
            PP2AAMPAR_P[j,i] = sim.getPatchCount('memb', 'PP2AAMPAR_P') 
            AMPARextra[j,i] = sim.getPatchCount('memb', 'AMPARextra')
            AMPARextra_P[j,i] = sim.getPatchCount('memb', 'AMPARextra_P')
            PP2AAMPARextra_P[j,i] = sim.getPatchCount('memb', 'PP2AAMPARextra_P')
            GRIP[j,i] = sim.getPatchCount('memb', 'GRIP')
            GRIPAMPAR[j,i] = sim.getPatchCount('memb', 'GRIPAMPAR')
            GRIPAMPAR_P[j,i] = sim.getPatchCount('memb', 'GRIPAMPAR_P')
            PKCstarAMPAR[j,i] = sim.getPatchCount('memb', 'PKCstarAMPAR')  
            PKCstar2AMPAR[j,i] = sim.getPatchCount('memb', 'PKCstar2AMPAR') 
            PKCstar3AMPAR[j,i] = sim.getPatchCount('memb', 'PKCstar3AMPAR') 
            PKCstar4AMPAR[j,i] = sim.getPatchCount('memb', 'PKCstar4AMPAR')   
            AMPARdend[j,i] = sim.getPatchCount('memb', 'AMPARdend')
            AMPARdend_P[j,i] = sim.getPatchCount('memb', 'AMPARdend_P')
            PP2AAMPARdend_P[j,i] = sim.getPatchCount('memb', 'PP2AAMPARdend_P')
            AMPARcyt[j,i] = sim.getCompCount('vsys','AMPARcyt')
            AMPARcyt_P[j,i] = sim.getCompCount('vsys', 'AMPARcyt_P')
            PP2AAMPARcyt_P[j,i] = sim.getCompCount('vsys', 'PP2AAMPARcyt_P')   

            PP1[j,i] = sim.getCompCount('vsys','PP1')
            cAMP_PDE1[j,i] = sim.getCompCount('vsys','cAMP_PDE1')
            PDE1[j,i] = sim.getCompCount('vsys','PDE1')
            CaMKII[j,i] = sim.getCompCount('vsys','CaMKII')
            cGMP[j,i] = sim.getCompCount('vsys','cGMP')
            CaM3Ca_PDE1[j,i] = sim.getCompCount('vsys','CaM3Ca_PDE1')
            C_actPKA[j,i] = sim.getCompCount('vsys','C_actPKA')
            cAMP[j,i] = sim.getCompCount('vsys','cAMP')
            PKG[j,i] = sim.getCompCount('vsys','PKG')
            PP1_DARPP32[j,i] = sim.getCompCount('vsys','PP1_DARPP32')

            
            
           
            
            sim.setCompReacK('vsys', 'Cainflux', ica[i]) # changes reaction constant to be ...
    
#############################################################################
    
   
    
    AMPAR_mean = mean(AMPAR, axis=0)
    AMPAR_P_mean = mean(AMPAR_P, axis=0)
    PP2AAMPAR_P_mean = mean(PP2AAMPAR_P, axis=0)
    GRIPAMPAR_mean = mean(GRIPAMPAR, axis=0)
    GRIPAMPAR_P_mean = mean(GRIPAMPAR_P, axis=0)
    PKCstarAMPAR_mean = mean(PKCstarAMPAR, axis=0)
    PKCstar2AMPAR_mean = mean(PKCstar2AMPAR, axis=0)
    PKCstar3AMPAR_mean = mean(PKCstar3AMPAR, axis=0)
    PKCstar4AMPAR_mean = mean(PKCstar4AMPAR, axis=0)

    AMPAR_syn_mean = AMPAR_mean + AMPAR_P_mean + PP2AAMPAR_P_mean + \
                         GRIPAMPAR_mean + GRIPAMPAR_P_mean + PKCstarAMPAR_mean + \
                         PKCstar2AMPAR_mean + PKCstar3AMPAR_mean + PKCstar4AMPAR_mean;
                         
        
        
        
    ofile_ampar=open(path+'/'+dataid+'_'+Kin+'_'+ca_peak+'_'+pp2a_input+'_'+no_input+'/'+ str(idx) +'/AMPAR_data.txt','w')
    numpy.savetxt(ofile_ampar,AMPAR_syn_mean)
    ofile_ampar.close()
        
    
   
    
            
    PKCstar_mean = mean(PKCstar, axis=0)
    PKCstar2_mean = mean(PKCstar2, axis=0)
    PKCstar3_mean = mean(PKCstar3, axis=0)
    PKCstar4_mean = mean(PKCstar4, axis=0)
    RafRKIPPKCstar_mean = mean(RafRKIPPKCstar, axis=0)
    RafRKIPPKCstar2_mean = mean(RafRKIPPKCstar2, axis=0)
    RafRKIPPKCstar3_mean = mean(RafRKIPPKCstar3, axis=0)
    RafRKIPPKCstar4_mean = mean(RafRKIPPKCstar4, axis=0)
    PKCstarAMPAR_mean = mean(PKCstarAMPAR, axis=0)
    PKCstar2AMPAR_mean = mean(PKCstar2AMPAR, axis=0)
    PKCstar3AMPAR_mean = mean(PKCstar3AMPAR, axis=0)
    PKCstar4AMPAR_mean = mean(PKCstar4AMPAR, axis=0)
        
    MEKRKIPPKCstar_mean = mean(MEKRKIPPKCstar, axis=0)
    MEKRKIPPKCstar2_mean = mean(MEKRKIPPKCstar2, axis=0)
    MEKRKIPPKCstar3_mean = mean(MEKRKIPPKCstar3, axis=0)
    MEKRKIPPKCstar4_mean = mean(MEKRKIPPKCstar4, axis=0)
                
    PKC_mean = PKCstar_mean + PKCstar2_mean + PKCstar3_mean + PKCstar4_mean + \
                   RafRKIPPKCstar_mean + RafRKIPPKCstar2_mean + RafRKIPPKCstar3_mean + \
                   RafRKIPPKCstar4_mean + PKCstarAMPAR_mean + PKCstar2AMPAR_mean + \
                   PKCstar3AMPAR_mean + PKCstar4AMPAR_mean + \
                   MEKRKIPPKCstar_mean + MEKRKIPPKCstar2_mean + MEKRKIPPKCstar3_mean + MEKRKIPPKCstar4_mean
                
       
      
    ofile_pkc=open(path+'/'+dataid+'_'+Kin+'_'+ca_peak+'_'+pp2a_input+'_'+no_input+'/'+ str(idx) +'/PKC_data.txt','w')
    numpy.savetxt(ofile_pkc,PKC_mean)
    ofile_pkc.close()
    
                              
    
    PP2A_mean = mean(PP2A, axis = 0)
    ofile_pp2a = open(path+'/'+dataid+'_'+Kin+'_'+ca_peak+'_'+pp2a_input+'_'+no_input+'/'+ str(idx) +'/PP2A_data.txt','w')
    numpy.savetxt(ofile_pp2a,PP2A_mean)
    ofile_pp2a.close()
    
    PP1_mean = mean(PP1, axis = 0)
    ofile_pp1 = open(path+'/'+dataid+'_'+Kin+'_'+ca_peak+'_'+pp2a_input+'_'+no_input+'/'+ str(idx) +'/PP1_data.txt','w')
    numpy.savetxt(ofile_pp1,PP1)
    ofile_pp1.close()

    PDE1_mean = mean(PDE1, axis = 0)
    ofile_pde1 = open(path+'/'+dataid+'_'+Kin+'_'+ca_peak+'_'+pp2a_input+'_'+no_input+'/'+ str(idx) +'/PDE1_data.txt','w')
    numpy.savetxt(ofile_pde1,PDE1_mean)
    ofile_pde1.close()

    CaMKII_mean = mean(CaMKII, axis = 0)
    ofile_camkii = open(path+'/'+dataid+'_'+Kin+'_'+ca_peak+'_'+pp2a_input+'_'+no_input+'/'+ str(idx) +'/CaMKII_data.txt','w')
    numpy.savetxt(ofile_camkii,CaMKII_mean)
    ofile_camkii.close()

    cGMP_mean = mean(cGMP, axis = 0)
    ofile_cgmp = open(path+'/'+dataid+'_'+Kin+'_'+ca_peak+'_'+pp2a_input+'_'+no_input+'/'+ str(idx) +'/cGMP_data.txt','w')
    numpy.savetxt(ofile_cgmp,cGMP_mean)
    ofile_cgmp.close()

    CaM3Ca_PDE1_mean = mean(CaM3Ca_PDE1, axis = 0)
    ofile_cam3ca_pde1 = open(path+'/'+dataid+'_'+Kin+'_'+ca_peak+'_'+pp2a_input+'_'+no_input+'/'+ str(idx) +'/CaM3Ca_PDE1_data.txt','w')
    numpy.savetxt(ofile_cam3ca_pde1,CaM3Ca_PDE1_mean)
    ofile_cam3ca_pde1.close()

    C_actPKA_mean = mean(C_actPKA, axis = 0)
    ofile_c_actpka = open(path+'/'+dataid+'_'+Kin+'_'+ca_peak+'_'+pp2a_input+'_'+no_input+'/'+ str(idx) +'/C_actPKA_data.txt','w')
    numpy.savetxt(ofile_c_actpka,C_actPKA_mean)
    ofile_c_actpka.close()

    cAMP_mean = mean(cAMP, axis = 0)
    ofile_camp = open(path+'/'+dataid+'_'+Kin+'_'+ca_peak+'_'+pp2a_input+'_'+no_input+'/'+ str(idx) +'/cAMP_data.txt','w')
    numpy.savetxt(ofile_camp,cAMP_mean)
    ofile_camp.close()

    PKG_mean = mean(PKG, axis = 0)
    ofile_pkg = open(path+'/'+dataid+'_'+Kin+'_'+ca_peak+'_'+pp2a_input+'_'+no_input+'/'+ str(idx) +'/PKG_data.txt','w')
    numpy.savetxt(ofile_pkg,PKG_mean)
    ofile_pkg.close()

    PP1_DARPP32_mean = mean(PP1_DARPP32, axis = 0)
    ofile_pp1_darpp32 = open(path+'/'+dataid+'_'+Kin+'_'+ca_peak+'_'+pp2a_input+'_'+no_input+'/'+ str(idx) +'/PP1_DARPP32_data.txt','w')
    numpy.savetxt(ofile_pp1_darpp32,PP1_DARPP32_mean)
    ofile_pp1_darpp32.close()


    return AMPAR_syn_mean

ampar_syn_mean = run_gauss_mean()

